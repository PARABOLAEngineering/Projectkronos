/* automatically generated by rust-bindgen 0.71.1 */

pub const MY_TRUE: u32 = 1;
pub const MY_FALSE: u32 = 0;
pub const MSDOS: u32 = 0;
pub const HPUNIX: u32 = 1;
pub const UNIX_FS: u32 = 1;
pub const _MATH_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __TIMESIZE: u32 = 64;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_60559_BFP__: u32 = 201404;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 36;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_LIBM_SIMD_DECL_STUBS_H: u32 = 1;
pub const __HAVE_FLOAT128: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT128: u32 = 0;
pub const __HAVE_FLOAT64X: u32 = 1;
pub const __HAVE_FLOAT64X_LONG_DOUBLE: u32 = 1;
pub const __HAVE_FLOAT16: u32 = 0;
pub const __HAVE_FLOAT32: u32 = 1;
pub const __HAVE_FLOAT64: u32 = 1;
pub const __HAVE_FLOAT32X: u32 = 1;
pub const __HAVE_FLOAT128X: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT16: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT32: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT64: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT32X: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT64X: u32 = 0;
pub const __HAVE_DISTINCT_FLOAT128X: u32 = 0;
pub const __HAVE_FLOATN_NOT_TYPEDEF: u32 = 0;
pub const __FP_LOGB0_IS_MIN: u32 = 1;
pub const __FP_LOGBNAN_IS_MIN: u32 = 1;
pub const FP_ILOGB0: i32 = -2147483648;
pub const FP_ILOGBNAN: i32 = -2147483648;
pub const __MATH_DECLARING_DOUBLE: u32 = 1;
pub const __MATH_DECLARING_FLOATN: u32 = 0;
pub const __MATH_DECLARE_LDOUBLE: u32 = 1;
pub const FP_NAN: u32 = 0;
pub const FP_INFINITE: u32 = 1;
pub const FP_ZERO: u32 = 2;
pub const FP_SUBNORMAL: u32 = 3;
pub const FP_NORMAL: u32 = 4;
pub const MATH_ERRNO: u32 = 1;
pub const MATH_ERREXCEPT: u32 = 2;
pub const math_errhandling: u32 = 3;
pub const M_E: f64 = 2.718281828459045;
pub const M_LOG2E: f64 = 1.4426950408889634;
pub const M_LOG10E: f64 = 0.4342944819032518;
pub const M_LN2: f64 = 0.6931471805599453;
pub const M_LN10: f64 = 2.302585092994046;
pub const M_PI: f64 = 3.141592653589793;
pub const M_PI_2: f64 = 1.5707963267948966;
pub const M_PI_4: f64 = 0.7853981633974483;
pub const M_1_PI: f64 = 0.3183098861837907;
pub const M_2_PI: f64 = 0.6366197723675814;
pub const M_2_SQRTPI: f64 = 1.1283791670955126;
pub const M_SQRT2: f64 = 1.4142135623730951;
pub const M_SQRT1_2: f64 = 0.7071067811865476;
pub const _STDLIB_H: u32 = 1;
pub const WNOHANG: u32 = 1;
pub const WUNTRACED: u32 = 2;
pub const WSTOPPED: u32 = 2;
pub const WEXITED: u32 = 4;
pub const WCONTINUED: u32 = 8;
pub const WNOWAIT: u32 = 16777216;
pub const __WNOTHREAD: u32 = 536870912;
pub const __WALL: u32 = 1073741824;
pub const __WCLONE: u32 = 2147483648;
pub const __W_CONTINUED: u32 = 65535;
pub const __WCOREFLAG: u32 = 128;
pub const __ldiv_t_defined: u32 = 1;
pub const __lldiv_t_defined: u32 = 1;
pub const RAND_MAX: u32 = 2147483647;
pub const EXIT_FAILURE: u32 = 1;
pub const EXIT_SUCCESS: u32 = 0;
pub const _SYS_TYPES_H: u32 = 1;
pub const __clock_t_defined: u32 = 1;
pub const __clockid_t_defined: u32 = 1;
pub const __time_t_defined: u32 = 1;
pub const __timer_t_defined: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const __BIT_TYPES_DEFINED__: u32 = 1;
pub const _ENDIAN_H: u32 = 1;
pub const _BITS_ENDIAN_H: u32 = 1;
pub const __LITTLE_ENDIAN: u32 = 1234;
pub const __BIG_ENDIAN: u32 = 4321;
pub const __PDP_ENDIAN: u32 = 3412;
pub const _BITS_ENDIANNESS_H: u32 = 1;
pub const __BYTE_ORDER: u32 = 1234;
pub const __FLOAT_WORD_ORDER: u32 = 1234;
pub const LITTLE_ENDIAN: u32 = 1234;
pub const BIG_ENDIAN: u32 = 4321;
pub const PDP_ENDIAN: u32 = 3412;
pub const BYTE_ORDER: u32 = 1234;
pub const _BITS_BYTESWAP_H: u32 = 1;
pub const _BITS_UINTN_IDENTITY_H: u32 = 1;
pub const _SYS_SELECT_H: u32 = 1;
pub const __sigset_t_defined: u32 = 1;
pub const __timeval_defined: u32 = 1;
pub const _STRUCT_TIMESPEC: u32 = 1;
pub const FD_SETSIZE: u32 = 1024;
pub const _BITS_PTHREADTYPES_COMMON_H: u32 = 1;
pub const _THREAD_SHARED_TYPES_H: u32 = 1;
pub const _BITS_PTHREADTYPES_ARCH_H: u32 = 1;
pub const __SIZEOF_PTHREAD_MUTEX_T: u32 = 40;
pub const __SIZEOF_PTHREAD_ATTR_T: u32 = 56;
pub const __SIZEOF_PTHREAD_RWLOCK_T: u32 = 56;
pub const __SIZEOF_PTHREAD_BARRIER_T: u32 = 32;
pub const __SIZEOF_PTHREAD_MUTEXATTR_T: u32 = 4;
pub const __SIZEOF_PTHREAD_COND_T: u32 = 48;
pub const __SIZEOF_PTHREAD_CONDATTR_T: u32 = 4;
pub const __SIZEOF_PTHREAD_RWLOCKATTR_T: u32 = 8;
pub const __SIZEOF_PTHREAD_BARRIERATTR_T: u32 = 4;
pub const _THREAD_MUTEX_INTERNAL_H: u32 = 1;
pub const __PTHREAD_MUTEX_HAVE_PREV: u32 = 1;
pub const __have_pthread_attr_t: u32 = 1;
pub const _ALLOCA_H: u32 = 1;
pub const _STDIO_H: u32 = 1;
pub const __GNUC_VA_LIST: u32 = 1;
pub const _____fpos_t_defined: u32 = 1;
pub const ____mbstate_t_defined: u32 = 1;
pub const _____fpos64_t_defined: u32 = 1;
pub const ____FILE_defined: u32 = 1;
pub const __FILE_defined: u32 = 1;
pub const __struct_FILE_defined: u32 = 1;
pub const _IO_EOF_SEEN: u32 = 16;
pub const _IO_ERR_SEEN: u32 = 32;
pub const _IO_USER_LOCK: u32 = 32768;
pub const _IOFBF: u32 = 0;
pub const _IOLBF: u32 = 1;
pub const _IONBF: u32 = 2;
pub const BUFSIZ: u32 = 8192;
pub const EOF: i32 = -1;
pub const SEEK_SET: u32 = 0;
pub const SEEK_CUR: u32 = 1;
pub const SEEK_END: u32 = 2;
pub const P_tmpdir: &[u8; 5] = b"/tmp\0";
pub const _BITS_STDIO_LIM_H: u32 = 1;
pub const L_tmpnam: u32 = 20;
pub const TMP_MAX: u32 = 238328;
pub const FILENAME_MAX: u32 = 4096;
pub const L_ctermid: u32 = 9;
pub const FOPEN_MAX: u32 = 16;
pub const _UNISTD_H: u32 = 1;
pub const _POSIX_VERSION: u32 = 200809;
pub const __POSIX2_THIS_VERSION: u32 = 200809;
pub const _POSIX2_VERSION: u32 = 200809;
pub const _POSIX2_C_VERSION: u32 = 200809;
pub const _POSIX2_C_BIND: u32 = 200809;
pub const _POSIX2_C_DEV: u32 = 200809;
pub const _POSIX2_SW_DEV: u32 = 200809;
pub const _POSIX2_LOCALEDEF: u32 = 200809;
pub const _XOPEN_VERSION: u32 = 700;
pub const _XOPEN_XCU_VERSION: u32 = 4;
pub const _XOPEN_XPG2: u32 = 1;
pub const _XOPEN_XPG3: u32 = 1;
pub const _XOPEN_XPG4: u32 = 1;
pub const _XOPEN_UNIX: u32 = 1;
pub const _XOPEN_ENH_I18N: u32 = 1;
pub const _XOPEN_LEGACY: u32 = 1;
pub const _BITS_POSIX_OPT_H: u32 = 1;
pub const _POSIX_JOB_CONTROL: u32 = 1;
pub const _POSIX_SAVED_IDS: u32 = 1;
pub const _POSIX_PRIORITY_SCHEDULING: u32 = 200809;
pub const _POSIX_SYNCHRONIZED_IO: u32 = 200809;
pub const _POSIX_FSYNC: u32 = 200809;
pub const _POSIX_MAPPED_FILES: u32 = 200809;
pub const _POSIX_MEMLOCK: u32 = 200809;
pub const _POSIX_MEMLOCK_RANGE: u32 = 200809;
pub const _POSIX_MEMORY_PROTECTION: u32 = 200809;
pub const _POSIX_CHOWN_RESTRICTED: u32 = 0;
pub const _POSIX_VDISABLE: u8 = 0u8;
pub const _POSIX_NO_TRUNC: u32 = 1;
pub const _XOPEN_REALTIME: u32 = 1;
pub const _XOPEN_REALTIME_THREADS: u32 = 1;
pub const _XOPEN_SHM: u32 = 1;
pub const _POSIX_THREADS: u32 = 200809;
pub const _POSIX_REENTRANT_FUNCTIONS: u32 = 1;
pub const _POSIX_THREAD_SAFE_FUNCTIONS: u32 = 200809;
pub const _POSIX_THREAD_PRIORITY_SCHEDULING: u32 = 200809;
pub const _POSIX_THREAD_ATTR_STACKSIZE: u32 = 200809;
pub const _POSIX_THREAD_ATTR_STACKADDR: u32 = 200809;
pub const _POSIX_THREAD_PRIO_INHERIT: u32 = 200809;
pub const _POSIX_THREAD_PRIO_PROTECT: u32 = 200809;
pub const _POSIX_THREAD_ROBUST_PRIO_INHERIT: u32 = 200809;
pub const _POSIX_THREAD_ROBUST_PRIO_PROTECT: i32 = -1;
pub const _POSIX_SEMAPHORES: u32 = 200809;
pub const _POSIX_REALTIME_SIGNALS: u32 = 200809;
pub const _POSIX_ASYNCHRONOUS_IO: u32 = 200809;
pub const _POSIX_ASYNC_IO: u32 = 1;
pub const _LFS_ASYNCHRONOUS_IO: u32 = 1;
pub const _POSIX_PRIORITIZED_IO: u32 = 200809;
pub const _LFS64_ASYNCHRONOUS_IO: u32 = 1;
pub const _LFS_LARGEFILE: u32 = 1;
pub const _LFS64_LARGEFILE: u32 = 1;
pub const _LFS64_STDIO: u32 = 1;
pub const _POSIX_SHARED_MEMORY_OBJECTS: u32 = 200809;
pub const _POSIX_CPUTIME: u32 = 0;
pub const _POSIX_THREAD_CPUTIME: u32 = 0;
pub const _POSIX_REGEXP: u32 = 1;
pub const _POSIX_READER_WRITER_LOCKS: u32 = 200809;
pub const _POSIX_SHELL: u32 = 1;
pub const _POSIX_TIMEOUTS: u32 = 200809;
pub const _POSIX_SPIN_LOCKS: u32 = 200809;
pub const _POSIX_SPAWN: u32 = 200809;
pub const _POSIX_TIMERS: u32 = 200809;
pub const _POSIX_BARRIERS: u32 = 200809;
pub const _POSIX_MESSAGE_PASSING: u32 = 200809;
pub const _POSIX_THREAD_PROCESS_SHARED: u32 = 200809;
pub const _POSIX_MONOTONIC_CLOCK: u32 = 0;
pub const _POSIX_CLOCK_SELECTION: u32 = 200809;
pub const _POSIX_ADVISORY_INFO: u32 = 200809;
pub const _POSIX_IPV6: u32 = 200809;
pub const _POSIX_RAW_SOCKETS: u32 = 200809;
pub const _POSIX2_CHAR_TERM: u32 = 200809;
pub const _POSIX_SPORADIC_SERVER: i32 = -1;
pub const _POSIX_THREAD_SPORADIC_SERVER: i32 = -1;
pub const _POSIX_TRACE: i32 = -1;
pub const _POSIX_TRACE_EVENT_FILTER: i32 = -1;
pub const _POSIX_TRACE_INHERIT: i32 = -1;
pub const _POSIX_TRACE_LOG: i32 = -1;
pub const _POSIX_TYPED_MEMORY_OBJECTS: i32 = -1;
pub const _POSIX_V7_LPBIG_OFFBIG: i32 = -1;
pub const _POSIX_V6_LPBIG_OFFBIG: i32 = -1;
pub const _XBS5_LPBIG_OFFBIG: i32 = -1;
pub const _POSIX_V7_LP64_OFF64: u32 = 1;
pub const _POSIX_V6_LP64_OFF64: u32 = 1;
pub const _XBS5_LP64_OFF64: u32 = 1;
pub const __ILP32_OFF32_CFLAGS: &[u8; 5] = b"-m32\0";
pub const __ILP32_OFF32_LDFLAGS: &[u8; 5] = b"-m32\0";
pub const __ILP32_OFFBIG_CFLAGS: &[u8; 48] = b"-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\0";
pub const __ILP32_OFFBIG_LDFLAGS: &[u8; 5] = b"-m32\0";
pub const __LP64_OFF64_CFLAGS: &[u8; 5] = b"-m64\0";
pub const __LP64_OFF64_LDFLAGS: &[u8; 5] = b"-m64\0";
pub const STDIN_FILENO: u32 = 0;
pub const STDOUT_FILENO: u32 = 1;
pub const STDERR_FILENO: u32 = 2;
pub const R_OK: u32 = 4;
pub const W_OK: u32 = 2;
pub const X_OK: u32 = 1;
pub const F_OK: u32 = 0;
pub const L_SET: u32 = 0;
pub const L_INCR: u32 = 1;
pub const L_XTND: u32 = 2;
pub const _GETOPT_POSIX_H: u32 = 1;
pub const _GETOPT_CORE_H: u32 = 1;
pub const F_ULOCK: u32 = 0;
pub const F_LOCK: u32 = 1;
pub const F_TLOCK: u32 = 2;
pub const F_TEST: u32 = 3;
pub const _LIBC_LIMITS_H_: u32 = 1;
pub const MB_LEN_MAX: u32 = 16;
pub const _BITS_POSIX1_LIM_H: u32 = 1;
pub const _POSIX_AIO_LISTIO_MAX: u32 = 2;
pub const _POSIX_AIO_MAX: u32 = 1;
pub const _POSIX_ARG_MAX: u32 = 4096;
pub const _POSIX_CHILD_MAX: u32 = 25;
pub const _POSIX_DELAYTIMER_MAX: u32 = 32;
pub const _POSIX_HOST_NAME_MAX: u32 = 255;
pub const _POSIX_LINK_MAX: u32 = 8;
pub const _POSIX_LOGIN_NAME_MAX: u32 = 9;
pub const _POSIX_MAX_CANON: u32 = 255;
pub const _POSIX_MAX_INPUT: u32 = 255;
pub const _POSIX_MQ_OPEN_MAX: u32 = 8;
pub const _POSIX_MQ_PRIO_MAX: u32 = 32;
pub const _POSIX_NAME_MAX: u32 = 14;
pub const _POSIX_NGROUPS_MAX: u32 = 8;
pub const _POSIX_OPEN_MAX: u32 = 20;
pub const _POSIX_PATH_MAX: u32 = 256;
pub const _POSIX_PIPE_BUF: u32 = 512;
pub const _POSIX_RE_DUP_MAX: u32 = 255;
pub const _POSIX_RTSIG_MAX: u32 = 8;
pub const _POSIX_SEM_NSEMS_MAX: u32 = 256;
pub const _POSIX_SEM_VALUE_MAX: u32 = 32767;
pub const _POSIX_SIGQUEUE_MAX: u32 = 32;
pub const _POSIX_SSIZE_MAX: u32 = 32767;
pub const _POSIX_STREAM_MAX: u32 = 8;
pub const _POSIX_SYMLINK_MAX: u32 = 255;
pub const _POSIX_SYMLOOP_MAX: u32 = 8;
pub const _POSIX_TIMER_MAX: u32 = 32;
pub const _POSIX_TTY_NAME_MAX: u32 = 9;
pub const _POSIX_TZNAME_MAX: u32 = 6;
pub const _POSIX_CLOCKRES_MIN: u32 = 20000000;
pub const NR_OPEN: u32 = 1024;
pub const NGROUPS_MAX: u32 = 65536;
pub const ARG_MAX: u32 = 131072;
pub const LINK_MAX: u32 = 127;
pub const MAX_CANON: u32 = 255;
pub const MAX_INPUT: u32 = 255;
pub const NAME_MAX: u32 = 255;
pub const PATH_MAX: u32 = 4096;
pub const PIPE_BUF: u32 = 4096;
pub const XATTR_NAME_MAX: u32 = 255;
pub const XATTR_SIZE_MAX: u32 = 65536;
pub const XATTR_LIST_MAX: u32 = 65536;
pub const RTSIG_MAX: u32 = 32;
pub const _POSIX_THREAD_KEYS_MAX: u32 = 128;
pub const PTHREAD_KEYS_MAX: u32 = 1024;
pub const _POSIX_THREAD_DESTRUCTOR_ITERATIONS: u32 = 4;
pub const PTHREAD_DESTRUCTOR_ITERATIONS: u32 = 4;
pub const _POSIX_THREAD_THREADS_MAX: u32 = 64;
pub const AIO_PRIO_DELTA_MAX: u32 = 20;
pub const PTHREAD_STACK_MIN: u32 = 16384;
pub const DELAYTIMER_MAX: u32 = 2147483647;
pub const TTY_NAME_MAX: u32 = 32;
pub const LOGIN_NAME_MAX: u32 = 256;
pub const HOST_NAME_MAX: u32 = 64;
pub const MQ_PRIO_MAX: u32 = 32768;
pub const SEM_VALUE_MAX: u32 = 2147483647;
pub const _BITS_POSIX2_LIM_H: u32 = 1;
pub const _POSIX2_BC_BASE_MAX: u32 = 99;
pub const _POSIX2_BC_DIM_MAX: u32 = 2048;
pub const _POSIX2_BC_SCALE_MAX: u32 = 99;
pub const _POSIX2_BC_STRING_MAX: u32 = 1000;
pub const _POSIX2_COLL_WEIGHTS_MAX: u32 = 2;
pub const _POSIX2_EXPR_NEST_MAX: u32 = 32;
pub const _POSIX2_LINE_MAX: u32 = 2048;
pub const _POSIX2_RE_DUP_MAX: u32 = 255;
pub const _POSIX2_CHARCLASS_NAME_MAX: u32 = 14;
pub const BC_BASE_MAX: u32 = 99;
pub const BC_DIM_MAX: u32 = 2048;
pub const BC_SCALE_MAX: u32 = 99;
pub const BC_STRING_MAX: u32 = 1000;
pub const COLL_WEIGHTS_MAX: u32 = 255;
pub const EXPR_NEST_MAX: u32 = 32;
pub const LINE_MAX: u32 = 2048;
pub const CHARCLASS_NAME_MAX: u32 = 2048;
pub const RE_DUP_MAX: u32 = 32767;
pub const TRUE: u32 = 1;
pub const FALSE: u32 = 0;
pub const OK: u32 = 0;
pub const ERR: i32 = -1;
pub const ODEGREE_STRING: &[u8; 3] = b"\xC2\xB0\0";
pub const AS_MAXCH: u32 = 256;
pub const RADTODEG: f64 = 57.29577951308232;
pub const DEGTORAD: f64 = 0.017453292519943295;
pub const DEG: u32 = 360000;
pub const DEG7_30: u32 = 2700000;
pub const DEG15: u32 = 5400000;
pub const DEG24: u32 = 8640000;
pub const DEG30: u32 = 10800000;
pub const DEG60: u32 = 21600000;
pub const DEG90: u32 = 32400000;
pub const DEG120: u32 = 43200000;
pub const DEG150: u32 = 54000000;
pub const DEG180: u32 = 64800000;
pub const DEG270: u32 = 97200000;
pub const DEG360: u32 = 129600000;
pub const CSTORAD: f64 = 0.0000000484813681109536;
pub const RADTOCS: f64 = 20626480.624709636;
pub const CS2DEG: f64 = 0.000002777777777777778;
pub const BFILE_R_ACCESS: &[u8; 2] = b"r\0";
pub const BFILE_RW_ACCESS: &[u8; 3] = b"r+\0";
pub const BFILE_W_CREATE: &[u8; 2] = b"w\0";
pub const BFILE_A_ACCESS: &[u8; 3] = b"a+\0";
pub const FILE_R_ACCESS: &[u8; 2] = b"r\0";
pub const FILE_RW_ACCESS: &[u8; 3] = b"r+\0";
pub const FILE_W_CREATE: &[u8; 2] = b"w\0";
pub const FILE_A_ACCESS: &[u8; 3] = b"a+\0";
pub const O_BINARY: u32 = 0;
pub const OPEN_MODE: u32 = 438;
pub const DIR_GLUE: &[u8; 2] = b"/\0";
pub const PATH_SEPARATOR: &[u8; 3] = b";:\0";
pub const _STRING_H: u32 = 1;
pub const _BITS_TYPES_LOCALE_T_H: u32 = 1;
pub const _BITS_TYPES___LOCALE_T_H: u32 = 1;
pub const _STRINGS_H: u32 = 1;
pub const _CTYPE_H: u32 = 1;
pub const SE_AUNIT_TO_KM: f64 = 149597870.7;
pub const SE_AUNIT_TO_LIGHTYEAR: f64 = 0.000015812507409819728;
pub const SE_AUNIT_TO_PARSEC: f64 = 0.000004848136811095274;
pub const SE_JUL_CAL: u32 = 0;
pub const SE_GREG_CAL: u32 = 1;
pub const SE_ECL_NUT: i32 = -1;
pub const SE_SUN: u32 = 0;
pub const SE_MOON: u32 = 1;
pub const SE_MERCURY: u32 = 2;
pub const SE_VENUS: u32 = 3;
pub const SE_MARS: u32 = 4;
pub const SE_JUPITER: u32 = 5;
pub const SE_SATURN: u32 = 6;
pub const SE_URANUS: u32 = 7;
pub const SE_NEPTUNE: u32 = 8;
pub const SE_PLUTO: u32 = 9;
pub const SE_MEAN_NODE: u32 = 10;
pub const SE_TRUE_NODE: u32 = 11;
pub const SE_MEAN_APOG: u32 = 12;
pub const SE_OSCU_APOG: u32 = 13;
pub const SE_EARTH: u32 = 14;
pub const SE_CHIRON: u32 = 15;
pub const SE_PHOLUS: u32 = 16;
pub const SE_CERES: u32 = 17;
pub const SE_PALLAS: u32 = 18;
pub const SE_JUNO: u32 = 19;
pub const SE_VESTA: u32 = 20;
pub const SE_INTP_APOG: u32 = 21;
pub const SE_INTP_PERG: u32 = 22;
pub const SE_NPLANETS: u32 = 23;
pub const SE_PLMOON_OFFSET: u32 = 9000;
pub const SE_AST_OFFSET: u32 = 10000;
pub const SE_VARUNA: u32 = 30000;
pub const SE_FICT_OFFSET: u32 = 40;
pub const SE_FICT_OFFSET_1: u32 = 39;
pub const SE_FICT_MAX: u32 = 999;
pub const SE_NFICT_ELEM: u32 = 15;
pub const SE_COMET_OFFSET: u32 = 1000;
pub const SE_NALL_NAT_POINTS: u32 = 38;
pub const SE_CUPIDO: u32 = 40;
pub const SE_HADES: u32 = 41;
pub const SE_ZEUS: u32 = 42;
pub const SE_KRONOS: u32 = 43;
pub const SE_APOLLON: u32 = 44;
pub const SE_ADMETOS: u32 = 45;
pub const SE_VULKANUS: u32 = 46;
pub const SE_POSEIDON: u32 = 47;
pub const SE_ISIS: u32 = 48;
pub const SE_NIBIRU: u32 = 49;
pub const SE_HARRINGTON: u32 = 50;
pub const SE_NEPTUNE_LEVERRIER: u32 = 51;
pub const SE_NEPTUNE_ADAMS: u32 = 52;
pub const SE_PLUTO_LOWELL: u32 = 53;
pub const SE_PLUTO_PICKERING: u32 = 54;
pub const SE_VULCAN: u32 = 55;
pub const SE_WHITE_MOON: u32 = 56;
pub const SE_PROSERPINA: u32 = 57;
pub const SE_WALDEMATH: u32 = 58;
pub const SE_FIXSTAR: i32 = -10;
pub const SE_ASC: u32 = 0;
pub const SE_MC: u32 = 1;
pub const SE_ARMC: u32 = 2;
pub const SE_VERTEX: u32 = 3;
pub const SE_EQUASC: u32 = 4;
pub const SE_COASC1: u32 = 5;
pub const SE_COASC2: u32 = 6;
pub const SE_POLASC: u32 = 7;
pub const SE_NASCMC: u32 = 8;
pub const SEFLG_JPLEPH: u32 = 1;
pub const SEFLG_SWIEPH: u32 = 2;
pub const SEFLG_MOSEPH: u32 = 4;
pub const SEFLG_HELCTR: u32 = 8;
pub const SEFLG_TRUEPOS: u32 = 16;
pub const SEFLG_J2000: u32 = 32;
pub const SEFLG_NONUT: u32 = 64;
pub const SEFLG_SPEED3: u32 = 128;
pub const SEFLG_SPEED: u32 = 256;
pub const SEFLG_NOGDEFL: u32 = 512;
pub const SEFLG_NOABERR: u32 = 1024;
pub const SEFLG_ASTROMETRIC: u32 = 1536;
pub const SEFLG_EQUATORIAL: u32 = 2048;
pub const SEFLG_XYZ: u32 = 4096;
pub const SEFLG_RADIANS: u32 = 8192;
pub const SEFLG_BARYCTR: u32 = 16384;
pub const SEFLG_TOPOCTR: u32 = 32768;
pub const SEFLG_ORBEL_AA: u32 = 32768;
pub const SEFLG_TROPICAL: u32 = 0;
pub const SEFLG_SIDEREAL: u32 = 65536;
pub const SEFLG_ICRS: u32 = 131072;
pub const SEFLG_DPSIDEPS_1980: u32 = 262144;
pub const SEFLG_JPLHOR: u32 = 262144;
pub const SEFLG_JPLHOR_APPROX: u32 = 524288;
pub const SEFLG_CENTER_BODY: u32 = 1048576;
pub const SEFLG_TEST_PLMOON: u32 = 2228280;
pub const SE_SIDBITS: u32 = 256;
pub const SE_SIDBIT_ECL_T0: u32 = 256;
pub const SE_SIDBIT_SSY_PLANE: u32 = 512;
pub const SE_SIDBIT_USER_UT: u32 = 1024;
pub const SE_SIDBIT_ECL_DATE: u32 = 2048;
pub const SE_SIDBIT_NO_PREC_OFFSET: u32 = 4096;
pub const SE_SIDBIT_PREC_ORIG: u32 = 8192;
pub const SE_SIDM_FAGAN_BRADLEY: u32 = 0;
pub const SE_SIDM_LAHIRI: u32 = 1;
pub const SE_SIDM_DELUCE: u32 = 2;
pub const SE_SIDM_RAMAN: u32 = 3;
pub const SE_SIDM_USHASHASHI: u32 = 4;
pub const SE_SIDM_KRISHNAMURTI: u32 = 5;
pub const SE_SIDM_DJWHAL_KHUL: u32 = 6;
pub const SE_SIDM_YUKTESHWAR: u32 = 7;
pub const SE_SIDM_JN_BHASIN: u32 = 8;
pub const SE_SIDM_BABYL_KUGLER1: u32 = 9;
pub const SE_SIDM_BABYL_KUGLER2: u32 = 10;
pub const SE_SIDM_BABYL_KUGLER3: u32 = 11;
pub const SE_SIDM_BABYL_HUBER: u32 = 12;
pub const SE_SIDM_BABYL_ETPSC: u32 = 13;
pub const SE_SIDM_ALDEBARAN_15TAU: u32 = 14;
pub const SE_SIDM_HIPPARCHOS: u32 = 15;
pub const SE_SIDM_SASSANIAN: u32 = 16;
pub const SE_SIDM_GALCENT_0SAG: u32 = 17;
pub const SE_SIDM_J2000: u32 = 18;
pub const SE_SIDM_J1900: u32 = 19;
pub const SE_SIDM_B1950: u32 = 20;
pub const SE_SIDM_SURYASIDDHANTA: u32 = 21;
pub const SE_SIDM_SURYASIDDHANTA_MSUN: u32 = 22;
pub const SE_SIDM_ARYABHATA: u32 = 23;
pub const SE_SIDM_ARYABHATA_MSUN: u32 = 24;
pub const SE_SIDM_SS_REVATI: u32 = 25;
pub const SE_SIDM_SS_CITRA: u32 = 26;
pub const SE_SIDM_TRUE_CITRA: u32 = 27;
pub const SE_SIDM_TRUE_REVATI: u32 = 28;
pub const SE_SIDM_TRUE_PUSHYA: u32 = 29;
pub const SE_SIDM_GALCENT_RGILBRAND: u32 = 30;
pub const SE_SIDM_GALEQU_IAU1958: u32 = 31;
pub const SE_SIDM_GALEQU_TRUE: u32 = 32;
pub const SE_SIDM_GALEQU_MULA: u32 = 33;
pub const SE_SIDM_GALALIGN_MARDYKS: u32 = 34;
pub const SE_SIDM_TRUE_MULA: u32 = 35;
pub const SE_SIDM_GALCENT_MULA_WILHELM: u32 = 36;
pub const SE_SIDM_ARYABHATA_522: u32 = 37;
pub const SE_SIDM_BABYL_BRITTON: u32 = 38;
pub const SE_SIDM_TRUE_SHEORAN: u32 = 39;
pub const SE_SIDM_GALCENT_COCHRANE: u32 = 40;
pub const SE_SIDM_GALEQU_FIORENZA: u32 = 41;
pub const SE_SIDM_VALENS_MOON: u32 = 42;
pub const SE_SIDM_LAHIRI_1940: u32 = 43;
pub const SE_SIDM_LAHIRI_VP285: u32 = 44;
pub const SE_SIDM_KRISHNAMURTI_VP291: u32 = 45;
pub const SE_SIDM_LAHIRI_ICRC: u32 = 46;
pub const SE_SIDM_USER: u32 = 255;
pub const SE_NSIDM_PREDEF: u32 = 47;
pub const SE_NODBIT_MEAN: u32 = 1;
pub const SE_NODBIT_OSCU: u32 = 2;
pub const SE_NODBIT_OSCU_BAR: u32 = 4;
pub const SE_NODBIT_FOPOINT: u32 = 256;
pub const SEFLG_DEFAULTEPH: u32 = 2;
pub const SE_MAX_STNAME: u32 = 256;
pub const SE_ECL_CENTRAL: u32 = 1;
pub const SE_ECL_NONCENTRAL: u32 = 2;
pub const SE_ECL_TOTAL: u32 = 4;
pub const SE_ECL_ANNULAR: u32 = 8;
pub const SE_ECL_PARTIAL: u32 = 16;
pub const SE_ECL_ANNULAR_TOTAL: u32 = 32;
pub const SE_ECL_HYBRID: u32 = 32;
pub const SE_ECL_PENUMBRAL: u32 = 64;
pub const SE_ECL_ALLTYPES_SOLAR: u32 = 63;
pub const SE_ECL_ALLTYPES_LUNAR: u32 = 84;
pub const SE_ECL_VISIBLE: u32 = 128;
pub const SE_ECL_MAX_VISIBLE: u32 = 256;
pub const SE_ECL_1ST_VISIBLE: u32 = 512;
pub const SE_ECL_PARTBEG_VISIBLE: u32 = 512;
pub const SE_ECL_2ND_VISIBLE: u32 = 1024;
pub const SE_ECL_TOTBEG_VISIBLE: u32 = 1024;
pub const SE_ECL_3RD_VISIBLE: u32 = 2048;
pub const SE_ECL_TOTEND_VISIBLE: u32 = 2048;
pub const SE_ECL_4TH_VISIBLE: u32 = 4096;
pub const SE_ECL_PARTEND_VISIBLE: u32 = 4096;
pub const SE_ECL_PENUMBBEG_VISIBLE: u32 = 8192;
pub const SE_ECL_PENUMBEND_VISIBLE: u32 = 16384;
pub const SE_ECL_OCC_BEG_DAYLIGHT: u32 = 8192;
pub const SE_ECL_OCC_END_DAYLIGHT: u32 = 16384;
pub const SE_ECL_ONE_TRY: u32 = 32768;
pub const SE_CALC_RISE: u32 = 1;
pub const SE_CALC_SET: u32 = 2;
pub const SE_CALC_MTRANSIT: u32 = 4;
pub const SE_CALC_ITRANSIT: u32 = 8;
pub const SE_BIT_DISC_CENTER: u32 = 256;
pub const SE_BIT_DISC_BOTTOM: u32 = 8192;
pub const SE_BIT_GEOCTR_NO_ECL_LAT: u32 = 128;
pub const SE_BIT_NO_REFRACTION: u32 = 512;
pub const SE_BIT_CIVIL_TWILIGHT: u32 = 1024;
pub const SE_BIT_NAUTIC_TWILIGHT: u32 = 2048;
pub const SE_BIT_ASTRO_TWILIGHT: u32 = 4096;
pub const SE_BIT_FIXED_DISC_SIZE: u32 = 16384;
pub const SE_BIT_FORCE_SLOW_METHOD: u32 = 32768;
pub const SE_BIT_HINDU_RISING: u32 = 896;
pub const SE_ECL2HOR: u32 = 0;
pub const SE_EQU2HOR: u32 = 1;
pub const SE_HOR2ECL: u32 = 0;
pub const SE_HOR2EQU: u32 = 1;
pub const SE_TRUE_TO_APP: u32 = 0;
pub const SE_APP_TO_TRUE: u32 = 1;
pub const SE_DE_NUMBER: u32 = 431;
pub const SE_FNAME_DE200: &[u8; 10] = b"de200.eph\0";
pub const SE_FNAME_DE403: &[u8; 10] = b"de403.eph\0";
pub const SE_FNAME_DE404: &[u8; 10] = b"de404.eph\0";
pub const SE_FNAME_DE405: &[u8; 10] = b"de405.eph\0";
pub const SE_FNAME_DE406: &[u8; 10] = b"de406.eph\0";
pub const SE_FNAME_DE431: &[u8; 10] = b"de431.eph\0";
pub const SE_FNAME_DFT: &[u8; 10] = b"de431.eph\0";
pub const SE_FNAME_DFT2: &[u8; 10] = b"de406.eph\0";
pub const SE_STARFILE_OLD: &[u8; 13] = b"fixstars.cat\0";
pub const SE_STARFILE: &[u8; 13] = b"sefstars.txt\0";
pub const SE_ASTNAMFILE: &[u8; 12] = b"seasnam.txt\0";
pub const SE_FICTFILE: &[u8; 12] = b"seorbel.txt\0";
pub const SE_EPHE_PATH: &[u8; 29] = b".:/users/ephe2/:/users/ephe/\0";
pub const SE_SPLIT_DEG_ROUND_SEC: u32 = 1;
pub const SE_SPLIT_DEG_ROUND_MIN: u32 = 2;
pub const SE_SPLIT_DEG_ROUND_DEG: u32 = 4;
pub const SE_SPLIT_DEG_ZODIACAL: u32 = 8;
pub const SE_SPLIT_DEG_NAKSHATRA: u32 = 1024;
pub const SE_SPLIT_DEG_KEEP_SIGN: u32 = 16;
pub const SE_SPLIT_DEG_KEEP_DEG: u32 = 32;
pub const SE_HELIACAL_RISING: u32 = 1;
pub const SE_HELIACAL_SETTING: u32 = 2;
pub const SE_MORNING_FIRST: u32 = 1;
pub const SE_EVENING_LAST: u32 = 2;
pub const SE_EVENING_FIRST: u32 = 3;
pub const SE_MORNING_LAST: u32 = 4;
pub const SE_ACRONYCHAL_RISING: u32 = 5;
pub const SE_ACRONYCHAL_SETTING: u32 = 6;
pub const SE_COSMICAL_SETTING: u32 = 6;
pub const SE_HELFLAG_LONG_SEARCH: u32 = 128;
pub const SE_HELFLAG_HIGH_PRECISION: u32 = 256;
pub const SE_HELFLAG_OPTICAL_PARAMS: u32 = 512;
pub const SE_HELFLAG_NO_DETAILS: u32 = 1024;
pub const SE_HELFLAG_SEARCH_1_PERIOD: u32 = 2048;
pub const SE_HELFLAG_VISLIM_DARK: u32 = 4096;
pub const SE_HELFLAG_VISLIM_NOMOON: u32 = 8192;
pub const SE_HELFLAG_VISLIM_PHOTOPIC: u32 = 16384;
pub const SE_HELFLAG_VISLIM_SCOTOPIC: u32 = 32768;
pub const SE_HELFLAG_AV: u32 = 65536;
pub const SE_HELFLAG_AVKIND_VR: u32 = 65536;
pub const SE_HELFLAG_AVKIND_PTO: u32 = 131072;
pub const SE_HELFLAG_AVKIND_MIN7: u32 = 262144;
pub const SE_HELFLAG_AVKIND_MIN9: u32 = 524288;
pub const SE_HELFLAG_AVKIND: u32 = 983040;
pub const TJD_INVALID: f64 = 99999999.0;
pub const SIMULATE_VICTORVB: u32 = 1;
pub const SE_PHOTOPIC_FLAG: u32 = 0;
pub const SE_SCOTOPIC_FLAG: u32 = 1;
pub const SE_MIXEDOPIC_FLAG: u32 = 2;
pub const SE_TIDAL_DE200: f64 = -23.8946;
pub const SE_TIDAL_DE403: f64 = -25.58;
pub const SE_TIDAL_DE404: f64 = -25.58;
pub const SE_TIDAL_DE405: f64 = -25.826;
pub const SE_TIDAL_DE406: f64 = -25.826;
pub const SE_TIDAL_DE421: f64 = -25.85;
pub const SE_TIDAL_DE422: f64 = -25.85;
pub const SE_TIDAL_DE430: f64 = -25.82;
pub const SE_TIDAL_DE431: f64 = -25.8;
pub const SE_TIDAL_DE441: f64 = -25.936;
pub const SE_TIDAL_26: f64 = -26.0;
pub const SE_TIDAL_STEPHENSON_2016: f64 = -25.85;
pub const SE_TIDAL_DEFAULT: f64 = -25.8;
pub const SE_TIDAL_AUTOMATIC: u32 = 999999;
pub const SE_TIDAL_MOSEPH: f64 = -25.58;
pub const SE_TIDAL_SWIEPH: f64 = -25.8;
pub const SE_TIDAL_JPLEPH: f64 = -25.8;
pub const SE_DELTAT_AUTOMATIC: f64 = -0.0000000001;
pub const SE_MODEL_DELTAT: u32 = 0;
pub const SE_MODEL_PREC_LONGTERM: u32 = 1;
pub const SE_MODEL_PREC_SHORTTERM: u32 = 2;
pub const SE_MODEL_NUT: u32 = 3;
pub const SE_MODEL_BIAS: u32 = 4;
pub const SE_MODEL_JPLHOR_MODE: u32 = 5;
pub const SE_MODEL_JPLHORA_MODE: u32 = 6;
pub const SE_MODEL_SIDT: u32 = 7;
pub const NSE_MODELS: u32 = 8;
pub const SEMOD_NPREC: u32 = 11;
pub const SEMOD_PREC_IAU_1976: u32 = 1;
pub const SEMOD_PREC_LASKAR_1986: u32 = 2;
pub const SEMOD_PREC_WILL_EPS_LASK: u32 = 3;
pub const SEMOD_PREC_WILLIAMS_1994: u32 = 4;
pub const SEMOD_PREC_SIMON_1994: u32 = 5;
pub const SEMOD_PREC_IAU_2000: u32 = 6;
pub const SEMOD_PREC_BRETAGNON_2003: u32 = 7;
pub const SEMOD_PREC_IAU_2006: u32 = 8;
pub const SEMOD_PREC_VONDRAK_2011: u32 = 9;
pub const SEMOD_PREC_OWEN_1990: u32 = 10;
pub const SEMOD_PREC_NEWCOMB: u32 = 11;
pub const SEMOD_PREC_DEFAULT: u32 = 9;
pub const SEMOD_PREC_DEFAULT_SHORT: u32 = 9;
pub const SEMOD_NNUT: u32 = 5;
pub const SEMOD_NUT_IAU_1980: u32 = 1;
pub const SEMOD_NUT_IAU_CORR_1987: u32 = 2;
pub const SEMOD_NUT_IAU_2000A: u32 = 3;
pub const SEMOD_NUT_IAU_2000B: u32 = 4;
pub const SEMOD_NUT_WOOLARD: u32 = 5;
pub const SEMOD_NUT_DEFAULT: u32 = 4;
pub const SEMOD_NSIDT: u32 = 4;
pub const SEMOD_SIDT_IAU_1976: u32 = 1;
pub const SEMOD_SIDT_IAU_2006: u32 = 2;
pub const SEMOD_SIDT_IERS_CONV_2010: u32 = 3;
pub const SEMOD_SIDT_LONGTERM: u32 = 4;
pub const SEMOD_SIDT_DEFAULT: u32 = 4;
pub const SEMOD_NBIAS: u32 = 3;
pub const SEMOD_BIAS_NONE: u32 = 1;
pub const SEMOD_BIAS_IAU2000: u32 = 2;
pub const SEMOD_BIAS_IAU2006: u32 = 3;
pub const SEMOD_BIAS_DEFAULT: u32 = 3;
pub const SEMOD_NJPLHOR: u32 = 2;
pub const SEMOD_JPLHOR_LONG_AGREEMENT: u32 = 1;
pub const SEMOD_JPLHOR_DEFAULT: u32 = 1;
pub const SEMOD_NJPLHORA: u32 = 3;
pub const SEMOD_JPLHORA_1: u32 = 1;
pub const SEMOD_JPLHORA_2: u32 = 2;
pub const SEMOD_JPLHORA_3: u32 = 3;
pub const SEMOD_JPLHORA_DEFAULT: u32 = 3;
pub const SEMOD_NDELTAT: u32 = 5;
pub const SEMOD_DELTAT_STEPHENSON_MORRISON_1984: u32 = 1;
pub const SEMOD_DELTAT_STEPHENSON_1997: u32 = 2;
pub const SEMOD_DELTAT_STEPHENSON_MORRISON_2004: u32 = 3;
pub const SEMOD_DELTAT_ESPENAK_MEEUS_2006: u32 = 4;
pub const SEMOD_DELTAT_STEPHENSON_ETC_2016: u32 = 5;
pub const SEMOD_DELTAT_DEFAULT: u32 = 5;
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __intmax_t = ::std::os::raw::c_long;
pub type __uintmax_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __fsid_t"][::std::mem::size_of::<__fsid_t>() - 8usize];
    ["Alignment of __fsid_t"][::std::mem::align_of::<__fsid_t>() - 4usize];
    ["Offset of field: __fsid_t::__val"][::std::mem::offset_of!(__fsid_t, __val) - 0usize];
};
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __suseconds64_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type __sig_atomic_t = ::std::os::raw::c_int;
pub type _Float32 = f32;
pub type _Float64 = f64;
pub type _Float32x = f64;
pub type _Float64x = u128;
pub type float_t = f32;
pub type double_t = f64;
unsafe extern "C" {
    pub static mut signgam: ::std::os::raw::c_int;
}
pub type _bindgen_ty_1 = ::std::os::raw::c_uint;
pub type wchar_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct div_t {
    pub quot: ::std::os::raw::c_int,
    pub rem: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of div_t"][::std::mem::size_of::<div_t>() - 8usize];
    ["Alignment of div_t"][::std::mem::align_of::<div_t>() - 4usize];
    ["Offset of field: div_t::quot"][::std::mem::offset_of!(div_t, quot) - 0usize];
    ["Offset of field: div_t::rem"][::std::mem::offset_of!(div_t, rem) - 4usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ldiv_t {
    pub quot: ::std::os::raw::c_long,
    pub rem: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ldiv_t"][::std::mem::size_of::<ldiv_t>() - 16usize];
    ["Alignment of ldiv_t"][::std::mem::align_of::<ldiv_t>() - 8usize];
    ["Offset of field: ldiv_t::quot"][::std::mem::offset_of!(ldiv_t, quot) - 0usize];
    ["Offset of field: ldiv_t::rem"][::std::mem::offset_of!(ldiv_t, rem) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct lldiv_t {
    pub quot: ::std::os::raw::c_longlong,
    pub rem: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of lldiv_t"][::std::mem::size_of::<lldiv_t>() - 16usize];
    ["Alignment of lldiv_t"][::std::mem::align_of::<lldiv_t>() - 8usize];
    ["Offset of field: lldiv_t::quot"][::std::mem::offset_of!(lldiv_t, quot) - 0usize];
    ["Offset of field: lldiv_t::rem"][::std::mem::offset_of!(lldiv_t, rem) - 8usize];
};
pub type u_char = __u_char;
pub type u_short = __u_short;
pub type u_int = __u_int;
pub type u_long = __u_long;
pub type quad_t = __quad_t;
pub type u_quad_t = __u_quad_t;
pub type fsid_t = __fsid_t;
pub type loff_t = __loff_t;
pub type ino_t = __ino_t;
pub type dev_t = __dev_t;
pub type gid_t = __gid_t;
pub type mode_t = __mode_t;
pub type nlink_t = __nlink_t;
pub type uid_t = __uid_t;
pub type off_t = __off_t;
pub type pid_t = __pid_t;
pub type id_t = __id_t;
pub type daddr_t = __daddr_t;
pub type caddr_t = __caddr_t;
pub type key_t = __key_t;
pub type clock_t = __clock_t;
pub type clockid_t = __clockid_t;
pub type time_t = __time_t;
pub type timer_t = __timer_t;
pub type ulong = ::std::os::raw::c_ulong;
pub type ushort = ::std::os::raw::c_ushort;
pub type uint = ::std::os::raw::c_uint;
pub type u_int8_t = __uint8_t;
pub type u_int16_t = __uint16_t;
pub type u_int32_t = __uint32_t;
pub type u_int64_t = __uint64_t;
pub type register_t = ::std::os::raw::c_long;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __sigset_t {
    pub __val: [::std::os::raw::c_ulong; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __sigset_t"][::std::mem::size_of::<__sigset_t>() - 128usize];
    ["Alignment of __sigset_t"][::std::mem::align_of::<__sigset_t>() - 8usize];
    ["Offset of field: __sigset_t::__val"][::std::mem::offset_of!(__sigset_t, __val) - 0usize];
};
pub type sigset_t = __sigset_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct timeval {
    pub tv_sec: __time_t,
    pub tv_usec: __suseconds_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of timeval"][::std::mem::size_of::<timeval>() - 16usize];
    ["Alignment of timeval"][::std::mem::align_of::<timeval>() - 8usize];
    ["Offset of field: timeval::tv_sec"][::std::mem::offset_of!(timeval, tv_sec) - 0usize];
    ["Offset of field: timeval::tv_usec"][::std::mem::offset_of!(timeval, tv_usec) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct timespec {
    pub tv_sec: __time_t,
    pub tv_nsec: __syscall_slong_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of timespec"][::std::mem::size_of::<timespec>() - 16usize];
    ["Alignment of timespec"][::std::mem::align_of::<timespec>() - 8usize];
    ["Offset of field: timespec::tv_sec"][::std::mem::offset_of!(timespec, tv_sec) - 0usize];
    ["Offset of field: timespec::tv_nsec"][::std::mem::offset_of!(timespec, tv_nsec) - 8usize];
};
pub type suseconds_t = __suseconds_t;
pub type __fd_mask = ::std::os::raw::c_long;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fd_set {
    pub __fds_bits: [__fd_mask; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fd_set"][::std::mem::size_of::<fd_set>() - 128usize];
    ["Alignment of fd_set"][::std::mem::align_of::<fd_set>() - 8usize];
    ["Offset of field: fd_set::__fds_bits"][::std::mem::offset_of!(fd_set, __fds_bits) - 0usize];
};
pub type fd_mask = __fd_mask;
pub type blksize_t = __blksize_t;
pub type blkcnt_t = __blkcnt_t;
pub type fsblkcnt_t = __fsblkcnt_t;
pub type fsfilcnt_t = __fsfilcnt_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub union __atomic_wide_counter {
    pub __value64: ::std::os::raw::c_ulonglong,
    pub __value32: __atomic_wide_counter__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __atomic_wide_counter__bindgen_ty_1 {
    pub __low: ::std::os::raw::c_uint,
    pub __high: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __atomic_wide_counter__bindgen_ty_1"]
        [::std::mem::size_of::<__atomic_wide_counter__bindgen_ty_1>() - 8usize];
    ["Alignment of __atomic_wide_counter__bindgen_ty_1"]
        [::std::mem::align_of::<__atomic_wide_counter__bindgen_ty_1>() - 4usize];
    ["Offset of field: __atomic_wide_counter__bindgen_ty_1::__low"]
        [::std::mem::offset_of!(__atomic_wide_counter__bindgen_ty_1, __low) - 0usize];
    ["Offset of field: __atomic_wide_counter__bindgen_ty_1::__high"]
        [::std::mem::offset_of!(__atomic_wide_counter__bindgen_ty_1, __high) - 4usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __atomic_wide_counter"][::std::mem::size_of::<__atomic_wide_counter>() - 8usize];
    ["Alignment of __atomic_wide_counter"]
        [::std::mem::align_of::<__atomic_wide_counter>() - 8usize];
    ["Offset of field: __atomic_wide_counter::__value64"]
        [::std::mem::offset_of!(__atomic_wide_counter, __value64) - 0usize];
    ["Offset of field: __atomic_wide_counter::__value32"]
        [::std::mem::offset_of!(__atomic_wide_counter, __value32) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __pthread_internal_list {
    pub __prev: *mut __pthread_internal_list,
    pub __next: *mut __pthread_internal_list,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __pthread_internal_list"][::std::mem::size_of::<__pthread_internal_list>() - 16usize];
    ["Alignment of __pthread_internal_list"]
        [::std::mem::align_of::<__pthread_internal_list>() - 8usize];
    ["Offset of field: __pthread_internal_list::__prev"]
        [::std::mem::offset_of!(__pthread_internal_list, __prev) - 0usize];
    ["Offset of field: __pthread_internal_list::__next"]
        [::std::mem::offset_of!(__pthread_internal_list, __next) - 8usize];
};
pub type __pthread_list_t = __pthread_internal_list;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __pthread_internal_slist {
    pub __next: *mut __pthread_internal_slist,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __pthread_internal_slist"]
        [::std::mem::size_of::<__pthread_internal_slist>() - 8usize];
    ["Alignment of __pthread_internal_slist"]
        [::std::mem::align_of::<__pthread_internal_slist>() - 8usize];
    ["Offset of field: __pthread_internal_slist::__next"]
        [::std::mem::offset_of!(__pthread_internal_slist, __next) - 0usize];
};
pub type __pthread_slist_t = __pthread_internal_slist;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __pthread_mutex_s {
    pub __lock: ::std::os::raw::c_int,
    pub __count: ::std::os::raw::c_uint,
    pub __owner: ::std::os::raw::c_int,
    pub __nusers: ::std::os::raw::c_uint,
    pub __kind: ::std::os::raw::c_int,
    pub __spins: ::std::os::raw::c_short,
    pub __elision: ::std::os::raw::c_short,
    pub __list: __pthread_list_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __pthread_mutex_s"][::std::mem::size_of::<__pthread_mutex_s>() - 40usize];
    ["Alignment of __pthread_mutex_s"][::std::mem::align_of::<__pthread_mutex_s>() - 8usize];
    ["Offset of field: __pthread_mutex_s::__lock"]
        [::std::mem::offset_of!(__pthread_mutex_s, __lock) - 0usize];
    ["Offset of field: __pthread_mutex_s::__count"]
        [::std::mem::offset_of!(__pthread_mutex_s, __count) - 4usize];
    ["Offset of field: __pthread_mutex_s::__owner"]
        [::std::mem::offset_of!(__pthread_mutex_s, __owner) - 8usize];
    ["Offset of field: __pthread_mutex_s::__nusers"]
        [::std::mem::offset_of!(__pthread_mutex_s, __nusers) - 12usize];
    ["Offset of field: __pthread_mutex_s::__kind"]
        [::std::mem::offset_of!(__pthread_mutex_s, __kind) - 16usize];
    ["Offset of field: __pthread_mutex_s::__spins"]
        [::std::mem::offset_of!(__pthread_mutex_s, __spins) - 20usize];
    ["Offset of field: __pthread_mutex_s::__elision"]
        [::std::mem::offset_of!(__pthread_mutex_s, __elision) - 22usize];
    ["Offset of field: __pthread_mutex_s::__list"]
        [::std::mem::offset_of!(__pthread_mutex_s, __list) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __pthread_rwlock_arch_t {
    pub __readers: ::std::os::raw::c_uint,
    pub __writers: ::std::os::raw::c_uint,
    pub __wrphase_futex: ::std::os::raw::c_uint,
    pub __writers_futex: ::std::os::raw::c_uint,
    pub __pad3: ::std::os::raw::c_uint,
    pub __pad4: ::std::os::raw::c_uint,
    pub __cur_writer: ::std::os::raw::c_int,
    pub __shared: ::std::os::raw::c_int,
    pub __rwelision: ::std::os::raw::c_schar,
    pub __pad1: [::std::os::raw::c_uchar; 7usize],
    pub __pad2: ::std::os::raw::c_ulong,
    pub __flags: ::std::os::raw::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __pthread_rwlock_arch_t"][::std::mem::size_of::<__pthread_rwlock_arch_t>() - 56usize];
    ["Alignment of __pthread_rwlock_arch_t"]
        [::std::mem::align_of::<__pthread_rwlock_arch_t>() - 8usize];
    ["Offset of field: __pthread_rwlock_arch_t::__readers"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __readers) - 0usize];
    ["Offset of field: __pthread_rwlock_arch_t::__writers"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __writers) - 4usize];
    ["Offset of field: __pthread_rwlock_arch_t::__wrphase_futex"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __wrphase_futex) - 8usize];
    ["Offset of field: __pthread_rwlock_arch_t::__writers_futex"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __writers_futex) - 12usize];
    ["Offset of field: __pthread_rwlock_arch_t::__pad3"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __pad3) - 16usize];
    ["Offset of field: __pthread_rwlock_arch_t::__pad4"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __pad4) - 20usize];
    ["Offset of field: __pthread_rwlock_arch_t::__cur_writer"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __cur_writer) - 24usize];
    ["Offset of field: __pthread_rwlock_arch_t::__shared"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __shared) - 28usize];
    ["Offset of field: __pthread_rwlock_arch_t::__rwelision"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __rwelision) - 32usize];
    ["Offset of field: __pthread_rwlock_arch_t::__pad1"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __pad1) - 33usize];
    ["Offset of field: __pthread_rwlock_arch_t::__pad2"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __pad2) - 40usize];
    ["Offset of field: __pthread_rwlock_arch_t::__flags"]
        [::std::mem::offset_of!(__pthread_rwlock_arch_t, __flags) - 48usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct __pthread_cond_s {
    pub __wseq: __atomic_wide_counter,
    pub __g1_start: __atomic_wide_counter,
    pub __g_refs: [::std::os::raw::c_uint; 2usize],
    pub __g_size: [::std::os::raw::c_uint; 2usize],
    pub __g1_orig_size: ::std::os::raw::c_uint,
    pub __wrefs: ::std::os::raw::c_uint,
    pub __g_signals: [::std::os::raw::c_uint; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __pthread_cond_s"][::std::mem::size_of::<__pthread_cond_s>() - 48usize];
    ["Alignment of __pthread_cond_s"][::std::mem::align_of::<__pthread_cond_s>() - 8usize];
    ["Offset of field: __pthread_cond_s::__wseq"]
        [::std::mem::offset_of!(__pthread_cond_s, __wseq) - 0usize];
    ["Offset of field: __pthread_cond_s::__g1_start"]
        [::std::mem::offset_of!(__pthread_cond_s, __g1_start) - 8usize];
    ["Offset of field: __pthread_cond_s::__g_refs"]
        [::std::mem::offset_of!(__pthread_cond_s, __g_refs) - 16usize];
    ["Offset of field: __pthread_cond_s::__g_size"]
        [::std::mem::offset_of!(__pthread_cond_s, __g_size) - 24usize];
    ["Offset of field: __pthread_cond_s::__g1_orig_size"]
        [::std::mem::offset_of!(__pthread_cond_s, __g1_orig_size) - 32usize];
    ["Offset of field: __pthread_cond_s::__wrefs"]
        [::std::mem::offset_of!(__pthread_cond_s, __wrefs) - 36usize];
    ["Offset of field: __pthread_cond_s::__g_signals"]
        [::std::mem::offset_of!(__pthread_cond_s, __g_signals) - 40usize];
};
pub type __tss_t = ::std::os::raw::c_uint;
pub type __thrd_t = ::std::os::raw::c_ulong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __once_flag {
    pub __data: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __once_flag"][::std::mem::size_of::<__once_flag>() - 4usize];
    ["Alignment of __once_flag"][::std::mem::align_of::<__once_flag>() - 4usize];
    ["Offset of field: __once_flag::__data"][::std::mem::offset_of!(__once_flag, __data) - 0usize];
};
pub type pthread_t = ::std::os::raw::c_ulong;
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_mutexattr_t {
    pub __size: [::std::os::raw::c_char; 4usize],
    pub __align: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of pthread_mutexattr_t"][::std::mem::size_of::<pthread_mutexattr_t>() - 4usize];
    ["Alignment of pthread_mutexattr_t"][::std::mem::align_of::<pthread_mutexattr_t>() - 4usize];
    ["Offset of field: pthread_mutexattr_t::__size"]
        [::std::mem::offset_of!(pthread_mutexattr_t, __size) - 0usize];
    ["Offset of field: pthread_mutexattr_t::__align"]
        [::std::mem::offset_of!(pthread_mutexattr_t, __align) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_condattr_t {
    pub __size: [::std::os::raw::c_char; 4usize],
    pub __align: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of pthread_condattr_t"][::std::mem::size_of::<pthread_condattr_t>() - 4usize];
    ["Alignment of pthread_condattr_t"][::std::mem::align_of::<pthread_condattr_t>() - 4usize];
    ["Offset of field: pthread_condattr_t::__size"]
        [::std::mem::offset_of!(pthread_condattr_t, __size) - 0usize];
    ["Offset of field: pthread_condattr_t::__align"]
        [::std::mem::offset_of!(pthread_condattr_t, __align) - 0usize];
};
pub type pthread_key_t = ::std::os::raw::c_uint;
pub type pthread_once_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_attr_t {
    pub __size: [::std::os::raw::c_char; 56usize],
    pub __align: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of pthread_attr_t"][::std::mem::size_of::<pthread_attr_t>() - 56usize];
    ["Alignment of pthread_attr_t"][::std::mem::align_of::<pthread_attr_t>() - 8usize];
    ["Offset of field: pthread_attr_t::__size"]
        [::std::mem::offset_of!(pthread_attr_t, __size) - 0usize];
    ["Offset of field: pthread_attr_t::__align"]
        [::std::mem::offset_of!(pthread_attr_t, __align) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_mutex_t {
    pub __data: __pthread_mutex_s,
    pub __size: [::std::os::raw::c_char; 40usize],
    pub __align: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of pthread_mutex_t"][::std::mem::size_of::<pthread_mutex_t>() - 40usize];
    ["Alignment of pthread_mutex_t"][::std::mem::align_of::<pthread_mutex_t>() - 8usize];
    ["Offset of field: pthread_mutex_t::__data"]
        [::std::mem::offset_of!(pthread_mutex_t, __data) - 0usize];
    ["Offset of field: pthread_mutex_t::__size"]
        [::std::mem::offset_of!(pthread_mutex_t, __size) - 0usize];
    ["Offset of field: pthread_mutex_t::__align"]
        [::std::mem::offset_of!(pthread_mutex_t, __align) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_cond_t {
    pub __data: __pthread_cond_s,
    pub __size: [::std::os::raw::c_char; 48usize],
    pub __align: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of pthread_cond_t"][::std::mem::size_of::<pthread_cond_t>() - 48usize];
    ["Alignment of pthread_cond_t"][::std::mem::align_of::<pthread_cond_t>() - 8usize];
    ["Offset of field: pthread_cond_t::__data"]
        [::std::mem::offset_of!(pthread_cond_t, __data) - 0usize];
    ["Offset of field: pthread_cond_t::__size"]
        [::std::mem::offset_of!(pthread_cond_t, __size) - 0usize];
    ["Offset of field: pthread_cond_t::__align"]
        [::std::mem::offset_of!(pthread_cond_t, __align) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_rwlock_t {
    pub __data: __pthread_rwlock_arch_t,
    pub __size: [::std::os::raw::c_char; 56usize],
    pub __align: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of pthread_rwlock_t"][::std::mem::size_of::<pthread_rwlock_t>() - 56usize];
    ["Alignment of pthread_rwlock_t"][::std::mem::align_of::<pthread_rwlock_t>() - 8usize];
    ["Offset of field: pthread_rwlock_t::__data"]
        [::std::mem::offset_of!(pthread_rwlock_t, __data) - 0usize];
    ["Offset of field: pthread_rwlock_t::__size"]
        [::std::mem::offset_of!(pthread_rwlock_t, __size) - 0usize];
    ["Offset of field: pthread_rwlock_t::__align"]
        [::std::mem::offset_of!(pthread_rwlock_t, __align) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_rwlockattr_t {
    pub __size: [::std::os::raw::c_char; 8usize],
    pub __align: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of pthread_rwlockattr_t"][::std::mem::size_of::<pthread_rwlockattr_t>() - 8usize];
    ["Alignment of pthread_rwlockattr_t"][::std::mem::align_of::<pthread_rwlockattr_t>() - 8usize];
    ["Offset of field: pthread_rwlockattr_t::__size"]
        [::std::mem::offset_of!(pthread_rwlockattr_t, __size) - 0usize];
    ["Offset of field: pthread_rwlockattr_t::__align"]
        [::std::mem::offset_of!(pthread_rwlockattr_t, __align) - 0usize];
};
pub type pthread_spinlock_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_barrier_t {
    pub __size: [::std::os::raw::c_char; 32usize],
    pub __align: ::std::os::raw::c_long,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of pthread_barrier_t"][::std::mem::size_of::<pthread_barrier_t>() - 32usize];
    ["Alignment of pthread_barrier_t"][::std::mem::align_of::<pthread_barrier_t>() - 8usize];
    ["Offset of field: pthread_barrier_t::__size"]
        [::std::mem::offset_of!(pthread_barrier_t, __size) - 0usize];
    ["Offset of field: pthread_barrier_t::__align"]
        [::std::mem::offset_of!(pthread_barrier_t, __align) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union pthread_barrierattr_t {
    pub __size: [::std::os::raw::c_char; 4usize],
    pub __align: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of pthread_barrierattr_t"][::std::mem::size_of::<pthread_barrierattr_t>() - 4usize];
    ["Alignment of pthread_barrierattr_t"]
        [::std::mem::align_of::<pthread_barrierattr_t>() - 4usize];
    ["Offset of field: pthread_barrierattr_t::__size"]
        [::std::mem::offset_of!(pthread_barrierattr_t, __size) - 0usize];
    ["Offset of field: pthread_barrierattr_t::__align"]
        [::std::mem::offset_of!(pthread_barrierattr_t, __align) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct random_data {
    pub fptr: *mut i32,
    pub rptr: *mut i32,
    pub state: *mut i32,
    pub rand_type: ::std::os::raw::c_int,
    pub rand_deg: ::std::os::raw::c_int,
    pub rand_sep: ::std::os::raw::c_int,
    pub end_ptr: *mut i32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of random_data"][::std::mem::size_of::<random_data>() - 48usize];
    ["Alignment of random_data"][::std::mem::align_of::<random_data>() - 8usize];
    ["Offset of field: random_data::fptr"][::std::mem::offset_of!(random_data, fptr) - 0usize];
    ["Offset of field: random_data::rptr"][::std::mem::offset_of!(random_data, rptr) - 8usize];
    ["Offset of field: random_data::state"][::std::mem::offset_of!(random_data, state) - 16usize];
    ["Offset of field: random_data::rand_type"]
        [::std::mem::offset_of!(random_data, rand_type) - 24usize];
    ["Offset of field: random_data::rand_deg"]
        [::std::mem::offset_of!(random_data, rand_deg) - 28usize];
    ["Offset of field: random_data::rand_sep"]
        [::std::mem::offset_of!(random_data, rand_sep) - 32usize];
    ["Offset of field: random_data::end_ptr"]
        [::std::mem::offset_of!(random_data, end_ptr) - 40usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct drand48_data {
    pub __x: [::std::os::raw::c_ushort; 3usize],
    pub __old_x: [::std::os::raw::c_ushort; 3usize],
    pub __c: ::std::os::raw::c_ushort,
    pub __init: ::std::os::raw::c_ushort,
    pub __a: ::std::os::raw::c_ulonglong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of drand48_data"][::std::mem::size_of::<drand48_data>() - 24usize];
    ["Alignment of drand48_data"][::std::mem::align_of::<drand48_data>() - 8usize];
    ["Offset of field: drand48_data::__x"][::std::mem::offset_of!(drand48_data, __x) - 0usize];
    ["Offset of field: drand48_data::__old_x"]
        [::std::mem::offset_of!(drand48_data, __old_x) - 6usize];
    ["Offset of field: drand48_data::__c"][::std::mem::offset_of!(drand48_data, __c) - 12usize];
    ["Offset of field: drand48_data::__init"]
        [::std::mem::offset_of!(drand48_data, __init) - 14usize];
    ["Offset of field: drand48_data::__a"][::std::mem::offset_of!(drand48_data, __a) - 16usize];
};
pub type __compar_fn_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *const ::std::os::raw::c_void,
        arg2: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int,
>;
pub type va_list = __builtin_va_list;
pub type __gnuc_va_list = __builtin_va_list;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct __mbstate_t {
    pub __count: ::std::os::raw::c_int,
    pub __value: __mbstate_t__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union __mbstate_t__bindgen_ty_1 {
    pub __wch: ::std::os::raw::c_uint,
    pub __wchb: [::std::os::raw::c_char; 4usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __mbstate_t__bindgen_ty_1"]
        [::std::mem::size_of::<__mbstate_t__bindgen_ty_1>() - 4usize];
    ["Alignment of __mbstate_t__bindgen_ty_1"]
        [::std::mem::align_of::<__mbstate_t__bindgen_ty_1>() - 4usize];
    ["Offset of field: __mbstate_t__bindgen_ty_1::__wch"]
        [::std::mem::offset_of!(__mbstate_t__bindgen_ty_1, __wch) - 0usize];
    ["Offset of field: __mbstate_t__bindgen_ty_1::__wchb"]
        [::std::mem::offset_of!(__mbstate_t__bindgen_ty_1, __wchb) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __mbstate_t"][::std::mem::size_of::<__mbstate_t>() - 8usize];
    ["Alignment of __mbstate_t"][::std::mem::align_of::<__mbstate_t>() - 4usize];
    ["Offset of field: __mbstate_t::__count"]
        [::std::mem::offset_of!(__mbstate_t, __count) - 0usize];
    ["Offset of field: __mbstate_t::__value"]
        [::std::mem::offset_of!(__mbstate_t, __value) - 4usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct _G_fpos_t {
    pub __pos: __off_t,
    pub __state: __mbstate_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _G_fpos_t"][::std::mem::size_of::<_G_fpos_t>() - 16usize];
    ["Alignment of _G_fpos_t"][::std::mem::align_of::<_G_fpos_t>() - 8usize];
    ["Offset of field: _G_fpos_t::__pos"][::std::mem::offset_of!(_G_fpos_t, __pos) - 0usize];
    ["Offset of field: _G_fpos_t::__state"][::std::mem::offset_of!(_G_fpos_t, __state) - 8usize];
};
pub type __fpos_t = _G_fpos_t;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct _G_fpos64_t {
    pub __pos: __off64_t,
    pub __state: __mbstate_t,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _G_fpos64_t"][::std::mem::size_of::<_G_fpos64_t>() - 16usize];
    ["Alignment of _G_fpos64_t"][::std::mem::align_of::<_G_fpos64_t>() - 8usize];
    ["Offset of field: _G_fpos64_t::__pos"][::std::mem::offset_of!(_G_fpos64_t, __pos) - 0usize];
    ["Offset of field: _G_fpos64_t::__state"]
        [::std::mem::offset_of!(_G_fpos64_t, __state) - 8usize];
};
pub type __fpos64_t = _G_fpos64_t;
pub type __FILE = _IO_FILE;
pub type FILE = _IO_FILE;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_marker {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_codecvt {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_wide_data {
    _unused: [u8; 0],
}
pub type _IO_lock_t = ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _IO_FILE {
    pub _flags: ::std::os::raw::c_int,
    pub _IO_read_ptr: *mut ::std::os::raw::c_char,
    pub _IO_read_end: *mut ::std::os::raw::c_char,
    pub _IO_read_base: *mut ::std::os::raw::c_char,
    pub _IO_write_base: *mut ::std::os::raw::c_char,
    pub _IO_write_ptr: *mut ::std::os::raw::c_char,
    pub _IO_write_end: *mut ::std::os::raw::c_char,
    pub _IO_buf_base: *mut ::std::os::raw::c_char,
    pub _IO_buf_end: *mut ::std::os::raw::c_char,
    pub _IO_save_base: *mut ::std::os::raw::c_char,
    pub _IO_backup_base: *mut ::std::os::raw::c_char,
    pub _IO_save_end: *mut ::std::os::raw::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: ::std::os::raw::c_int,
    pub _flags2: ::std::os::raw::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: ::std::os::raw::c_ushort,
    pub _vtable_offset: ::std::os::raw::c_schar,
    pub _shortbuf: [::std::os::raw::c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub _codecvt: *mut _IO_codecvt,
    pub _wide_data: *mut _IO_wide_data,
    pub _freeres_list: *mut _IO_FILE,
    pub _freeres_buf: *mut ::std::os::raw::c_void,
    pub __pad5: usize,
    pub _mode: ::std::os::raw::c_int,
    pub _unused2: [::std::os::raw::c_char; 20usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _IO_FILE"][::std::mem::size_of::<_IO_FILE>() - 216usize];
    ["Alignment of _IO_FILE"][::std::mem::align_of::<_IO_FILE>() - 8usize];
    ["Offset of field: _IO_FILE::_flags"][::std::mem::offset_of!(_IO_FILE, _flags) - 0usize];
    ["Offset of field: _IO_FILE::_IO_read_ptr"]
        [::std::mem::offset_of!(_IO_FILE, _IO_read_ptr) - 8usize];
    ["Offset of field: _IO_FILE::_IO_read_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_read_end) - 16usize];
    ["Offset of field: _IO_FILE::_IO_read_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_read_base) - 24usize];
    ["Offset of field: _IO_FILE::_IO_write_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_write_base) - 32usize];
    ["Offset of field: _IO_FILE::_IO_write_ptr"]
        [::std::mem::offset_of!(_IO_FILE, _IO_write_ptr) - 40usize];
    ["Offset of field: _IO_FILE::_IO_write_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_write_end) - 48usize];
    ["Offset of field: _IO_FILE::_IO_buf_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_buf_base) - 56usize];
    ["Offset of field: _IO_FILE::_IO_buf_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_buf_end) - 64usize];
    ["Offset of field: _IO_FILE::_IO_save_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_save_base) - 72usize];
    ["Offset of field: _IO_FILE::_IO_backup_base"]
        [::std::mem::offset_of!(_IO_FILE, _IO_backup_base) - 80usize];
    ["Offset of field: _IO_FILE::_IO_save_end"]
        [::std::mem::offset_of!(_IO_FILE, _IO_save_end) - 88usize];
    ["Offset of field: _IO_FILE::_markers"][::std::mem::offset_of!(_IO_FILE, _markers) - 96usize];
    ["Offset of field: _IO_FILE::_chain"][::std::mem::offset_of!(_IO_FILE, _chain) - 104usize];
    ["Offset of field: _IO_FILE::_fileno"][::std::mem::offset_of!(_IO_FILE, _fileno) - 112usize];
    ["Offset of field: _IO_FILE::_flags2"][::std::mem::offset_of!(_IO_FILE, _flags2) - 116usize];
    ["Offset of field: _IO_FILE::_old_offset"]
        [::std::mem::offset_of!(_IO_FILE, _old_offset) - 120usize];
    ["Offset of field: _IO_FILE::_cur_column"]
        [::std::mem::offset_of!(_IO_FILE, _cur_column) - 128usize];
    ["Offset of field: _IO_FILE::_vtable_offset"]
        [::std::mem::offset_of!(_IO_FILE, _vtable_offset) - 130usize];
    ["Offset of field: _IO_FILE::_shortbuf"]
        [::std::mem::offset_of!(_IO_FILE, _shortbuf) - 131usize];
    ["Offset of field: _IO_FILE::_lock"][::std::mem::offset_of!(_IO_FILE, _lock) - 136usize];
    ["Offset of field: _IO_FILE::_offset"][::std::mem::offset_of!(_IO_FILE, _offset) - 144usize];
    ["Offset of field: _IO_FILE::_codecvt"][::std::mem::offset_of!(_IO_FILE, _codecvt) - 152usize];
    ["Offset of field: _IO_FILE::_wide_data"]
        [::std::mem::offset_of!(_IO_FILE, _wide_data) - 160usize];
    ["Offset of field: _IO_FILE::_freeres_list"]
        [::std::mem::offset_of!(_IO_FILE, _freeres_list) - 168usize];
    ["Offset of field: _IO_FILE::_freeres_buf"]
        [::std::mem::offset_of!(_IO_FILE, _freeres_buf) - 176usize];
    ["Offset of field: _IO_FILE::__pad5"][::std::mem::offset_of!(_IO_FILE, __pad5) - 184usize];
    ["Offset of field: _IO_FILE::_mode"][::std::mem::offset_of!(_IO_FILE, _mode) - 192usize];
    ["Offset of field: _IO_FILE::_unused2"][::std::mem::offset_of!(_IO_FILE, _unused2) - 196usize];
};
pub type fpos_t = __fpos_t;
unsafe extern "C" {
    pub static mut stdin: *mut FILE;
}
unsafe extern "C" {
    pub static mut stdout: *mut FILE;
}
unsafe extern "C" {
    pub static mut stderr: *mut FILE;
}
pub type useconds_t = __useconds_t;
pub type socklen_t = __socklen_t;
unsafe extern "C" {
    pub static mut __environ: *mut *mut ::std::os::raw::c_char;
}
pub const _PC_LINK_MAX: _bindgen_ty_2 = 0;
pub const _PC_MAX_CANON: _bindgen_ty_2 = 1;
pub const _PC_MAX_INPUT: _bindgen_ty_2 = 2;
pub const _PC_NAME_MAX: _bindgen_ty_2 = 3;
pub const _PC_PATH_MAX: _bindgen_ty_2 = 4;
pub const _PC_PIPE_BUF: _bindgen_ty_2 = 5;
pub const _PC_CHOWN_RESTRICTED: _bindgen_ty_2 = 6;
pub const _PC_NO_TRUNC: _bindgen_ty_2 = 7;
pub const _PC_VDISABLE: _bindgen_ty_2 = 8;
pub const _PC_SYNC_IO: _bindgen_ty_2 = 9;
pub const _PC_ASYNC_IO: _bindgen_ty_2 = 10;
pub const _PC_PRIO_IO: _bindgen_ty_2 = 11;
pub const _PC_SOCK_MAXBUF: _bindgen_ty_2 = 12;
pub const _PC_FILESIZEBITS: _bindgen_ty_2 = 13;
pub const _PC_REC_INCR_XFER_SIZE: _bindgen_ty_2 = 14;
pub const _PC_REC_MAX_XFER_SIZE: _bindgen_ty_2 = 15;
pub const _PC_REC_MIN_XFER_SIZE: _bindgen_ty_2 = 16;
pub const _PC_REC_XFER_ALIGN: _bindgen_ty_2 = 17;
pub const _PC_ALLOC_SIZE_MIN: _bindgen_ty_2 = 18;
pub const _PC_SYMLINK_MAX: _bindgen_ty_2 = 19;
pub const _PC_2_SYMLINKS: _bindgen_ty_2 = 20;
pub type _bindgen_ty_2 = ::std::os::raw::c_uint;
pub const _SC_ARG_MAX: _bindgen_ty_3 = 0;
pub const _SC_CHILD_MAX: _bindgen_ty_3 = 1;
pub const _SC_CLK_TCK: _bindgen_ty_3 = 2;
pub const _SC_NGROUPS_MAX: _bindgen_ty_3 = 3;
pub const _SC_OPEN_MAX: _bindgen_ty_3 = 4;
pub const _SC_STREAM_MAX: _bindgen_ty_3 = 5;
pub const _SC_TZNAME_MAX: _bindgen_ty_3 = 6;
pub const _SC_JOB_CONTROL: _bindgen_ty_3 = 7;
pub const _SC_SAVED_IDS: _bindgen_ty_3 = 8;
pub const _SC_REALTIME_SIGNALS: _bindgen_ty_3 = 9;
pub const _SC_PRIORITY_SCHEDULING: _bindgen_ty_3 = 10;
pub const _SC_TIMERS: _bindgen_ty_3 = 11;
pub const _SC_ASYNCHRONOUS_IO: _bindgen_ty_3 = 12;
pub const _SC_PRIORITIZED_IO: _bindgen_ty_3 = 13;
pub const _SC_SYNCHRONIZED_IO: _bindgen_ty_3 = 14;
pub const _SC_FSYNC: _bindgen_ty_3 = 15;
pub const _SC_MAPPED_FILES: _bindgen_ty_3 = 16;
pub const _SC_MEMLOCK: _bindgen_ty_3 = 17;
pub const _SC_MEMLOCK_RANGE: _bindgen_ty_3 = 18;
pub const _SC_MEMORY_PROTECTION: _bindgen_ty_3 = 19;
pub const _SC_MESSAGE_PASSING: _bindgen_ty_3 = 20;
pub const _SC_SEMAPHORES: _bindgen_ty_3 = 21;
pub const _SC_SHARED_MEMORY_OBJECTS: _bindgen_ty_3 = 22;
pub const _SC_AIO_LISTIO_MAX: _bindgen_ty_3 = 23;
pub const _SC_AIO_MAX: _bindgen_ty_3 = 24;
pub const _SC_AIO_PRIO_DELTA_MAX: _bindgen_ty_3 = 25;
pub const _SC_DELAYTIMER_MAX: _bindgen_ty_3 = 26;
pub const _SC_MQ_OPEN_MAX: _bindgen_ty_3 = 27;
pub const _SC_MQ_PRIO_MAX: _bindgen_ty_3 = 28;
pub const _SC_VERSION: _bindgen_ty_3 = 29;
pub const _SC_PAGESIZE: _bindgen_ty_3 = 30;
pub const _SC_RTSIG_MAX: _bindgen_ty_3 = 31;
pub const _SC_SEM_NSEMS_MAX: _bindgen_ty_3 = 32;
pub const _SC_SEM_VALUE_MAX: _bindgen_ty_3 = 33;
pub const _SC_SIGQUEUE_MAX: _bindgen_ty_3 = 34;
pub const _SC_TIMER_MAX: _bindgen_ty_3 = 35;
pub const _SC_BC_BASE_MAX: _bindgen_ty_3 = 36;
pub const _SC_BC_DIM_MAX: _bindgen_ty_3 = 37;
pub const _SC_BC_SCALE_MAX: _bindgen_ty_3 = 38;
pub const _SC_BC_STRING_MAX: _bindgen_ty_3 = 39;
pub const _SC_COLL_WEIGHTS_MAX: _bindgen_ty_3 = 40;
pub const _SC_EQUIV_CLASS_MAX: _bindgen_ty_3 = 41;
pub const _SC_EXPR_NEST_MAX: _bindgen_ty_3 = 42;
pub const _SC_LINE_MAX: _bindgen_ty_3 = 43;
pub const _SC_RE_DUP_MAX: _bindgen_ty_3 = 44;
pub const _SC_CHARCLASS_NAME_MAX: _bindgen_ty_3 = 45;
pub const _SC_2_VERSION: _bindgen_ty_3 = 46;
pub const _SC_2_C_BIND: _bindgen_ty_3 = 47;
pub const _SC_2_C_DEV: _bindgen_ty_3 = 48;
pub const _SC_2_FORT_DEV: _bindgen_ty_3 = 49;
pub const _SC_2_FORT_RUN: _bindgen_ty_3 = 50;
pub const _SC_2_SW_DEV: _bindgen_ty_3 = 51;
pub const _SC_2_LOCALEDEF: _bindgen_ty_3 = 52;
pub const _SC_PII: _bindgen_ty_3 = 53;
pub const _SC_PII_XTI: _bindgen_ty_3 = 54;
pub const _SC_PII_SOCKET: _bindgen_ty_3 = 55;
pub const _SC_PII_INTERNET: _bindgen_ty_3 = 56;
pub const _SC_PII_OSI: _bindgen_ty_3 = 57;
pub const _SC_POLL: _bindgen_ty_3 = 58;
pub const _SC_SELECT: _bindgen_ty_3 = 59;
pub const _SC_UIO_MAXIOV: _bindgen_ty_3 = 60;
pub const _SC_IOV_MAX: _bindgen_ty_3 = 60;
pub const _SC_PII_INTERNET_STREAM: _bindgen_ty_3 = 61;
pub const _SC_PII_INTERNET_DGRAM: _bindgen_ty_3 = 62;
pub const _SC_PII_OSI_COTS: _bindgen_ty_3 = 63;
pub const _SC_PII_OSI_CLTS: _bindgen_ty_3 = 64;
pub const _SC_PII_OSI_M: _bindgen_ty_3 = 65;
pub const _SC_T_IOV_MAX: _bindgen_ty_3 = 66;
pub const _SC_THREADS: _bindgen_ty_3 = 67;
pub const _SC_THREAD_SAFE_FUNCTIONS: _bindgen_ty_3 = 68;
pub const _SC_GETGR_R_SIZE_MAX: _bindgen_ty_3 = 69;
pub const _SC_GETPW_R_SIZE_MAX: _bindgen_ty_3 = 70;
pub const _SC_LOGIN_NAME_MAX: _bindgen_ty_3 = 71;
pub const _SC_TTY_NAME_MAX: _bindgen_ty_3 = 72;
pub const _SC_THREAD_DESTRUCTOR_ITERATIONS: _bindgen_ty_3 = 73;
pub const _SC_THREAD_KEYS_MAX: _bindgen_ty_3 = 74;
pub const _SC_THREAD_STACK_MIN: _bindgen_ty_3 = 75;
pub const _SC_THREAD_THREADS_MAX: _bindgen_ty_3 = 76;
pub const _SC_THREAD_ATTR_STACKADDR: _bindgen_ty_3 = 77;
pub const _SC_THREAD_ATTR_STACKSIZE: _bindgen_ty_3 = 78;
pub const _SC_THREAD_PRIORITY_SCHEDULING: _bindgen_ty_3 = 79;
pub const _SC_THREAD_PRIO_INHERIT: _bindgen_ty_3 = 80;
pub const _SC_THREAD_PRIO_PROTECT: _bindgen_ty_3 = 81;
pub const _SC_THREAD_PROCESS_SHARED: _bindgen_ty_3 = 82;
pub const _SC_NPROCESSORS_CONF: _bindgen_ty_3 = 83;
pub const _SC_NPROCESSORS_ONLN: _bindgen_ty_3 = 84;
pub const _SC_PHYS_PAGES: _bindgen_ty_3 = 85;
pub const _SC_AVPHYS_PAGES: _bindgen_ty_3 = 86;
pub const _SC_ATEXIT_MAX: _bindgen_ty_3 = 87;
pub const _SC_PASS_MAX: _bindgen_ty_3 = 88;
pub const _SC_XOPEN_VERSION: _bindgen_ty_3 = 89;
pub const _SC_XOPEN_XCU_VERSION: _bindgen_ty_3 = 90;
pub const _SC_XOPEN_UNIX: _bindgen_ty_3 = 91;
pub const _SC_XOPEN_CRYPT: _bindgen_ty_3 = 92;
pub const _SC_XOPEN_ENH_I18N: _bindgen_ty_3 = 93;
pub const _SC_XOPEN_SHM: _bindgen_ty_3 = 94;
pub const _SC_2_CHAR_TERM: _bindgen_ty_3 = 95;
pub const _SC_2_C_VERSION: _bindgen_ty_3 = 96;
pub const _SC_2_UPE: _bindgen_ty_3 = 97;
pub const _SC_XOPEN_XPG2: _bindgen_ty_3 = 98;
pub const _SC_XOPEN_XPG3: _bindgen_ty_3 = 99;
pub const _SC_XOPEN_XPG4: _bindgen_ty_3 = 100;
pub const _SC_CHAR_BIT: _bindgen_ty_3 = 101;
pub const _SC_CHAR_MAX: _bindgen_ty_3 = 102;
pub const _SC_CHAR_MIN: _bindgen_ty_3 = 103;
pub const _SC_INT_MAX: _bindgen_ty_3 = 104;
pub const _SC_INT_MIN: _bindgen_ty_3 = 105;
pub const _SC_LONG_BIT: _bindgen_ty_3 = 106;
pub const _SC_WORD_BIT: _bindgen_ty_3 = 107;
pub const _SC_MB_LEN_MAX: _bindgen_ty_3 = 108;
pub const _SC_NZERO: _bindgen_ty_3 = 109;
pub const _SC_SSIZE_MAX: _bindgen_ty_3 = 110;
pub const _SC_SCHAR_MAX: _bindgen_ty_3 = 111;
pub const _SC_SCHAR_MIN: _bindgen_ty_3 = 112;
pub const _SC_SHRT_MAX: _bindgen_ty_3 = 113;
pub const _SC_SHRT_MIN: _bindgen_ty_3 = 114;
pub const _SC_UCHAR_MAX: _bindgen_ty_3 = 115;
pub const _SC_UINT_MAX: _bindgen_ty_3 = 116;
pub const _SC_ULONG_MAX: _bindgen_ty_3 = 117;
pub const _SC_USHRT_MAX: _bindgen_ty_3 = 118;
pub const _SC_NL_ARGMAX: _bindgen_ty_3 = 119;
pub const _SC_NL_LANGMAX: _bindgen_ty_3 = 120;
pub const _SC_NL_MSGMAX: _bindgen_ty_3 = 121;
pub const _SC_NL_NMAX: _bindgen_ty_3 = 122;
pub const _SC_NL_SETMAX: _bindgen_ty_3 = 123;
pub const _SC_NL_TEXTMAX: _bindgen_ty_3 = 124;
pub const _SC_XBS5_ILP32_OFF32: _bindgen_ty_3 = 125;
pub const _SC_XBS5_ILP32_OFFBIG: _bindgen_ty_3 = 126;
pub const _SC_XBS5_LP64_OFF64: _bindgen_ty_3 = 127;
pub const _SC_XBS5_LPBIG_OFFBIG: _bindgen_ty_3 = 128;
pub const _SC_XOPEN_LEGACY: _bindgen_ty_3 = 129;
pub const _SC_XOPEN_REALTIME: _bindgen_ty_3 = 130;
pub const _SC_XOPEN_REALTIME_THREADS: _bindgen_ty_3 = 131;
pub const _SC_ADVISORY_INFO: _bindgen_ty_3 = 132;
pub const _SC_BARRIERS: _bindgen_ty_3 = 133;
pub const _SC_BASE: _bindgen_ty_3 = 134;
pub const _SC_C_LANG_SUPPORT: _bindgen_ty_3 = 135;
pub const _SC_C_LANG_SUPPORT_R: _bindgen_ty_3 = 136;
pub const _SC_CLOCK_SELECTION: _bindgen_ty_3 = 137;
pub const _SC_CPUTIME: _bindgen_ty_3 = 138;
pub const _SC_THREAD_CPUTIME: _bindgen_ty_3 = 139;
pub const _SC_DEVICE_IO: _bindgen_ty_3 = 140;
pub const _SC_DEVICE_SPECIFIC: _bindgen_ty_3 = 141;
pub const _SC_DEVICE_SPECIFIC_R: _bindgen_ty_3 = 142;
pub const _SC_FD_MGMT: _bindgen_ty_3 = 143;
pub const _SC_FIFO: _bindgen_ty_3 = 144;
pub const _SC_PIPE: _bindgen_ty_3 = 145;
pub const _SC_FILE_ATTRIBUTES: _bindgen_ty_3 = 146;
pub const _SC_FILE_LOCKING: _bindgen_ty_3 = 147;
pub const _SC_FILE_SYSTEM: _bindgen_ty_3 = 148;
pub const _SC_MONOTONIC_CLOCK: _bindgen_ty_3 = 149;
pub const _SC_MULTI_PROCESS: _bindgen_ty_3 = 150;
pub const _SC_SINGLE_PROCESS: _bindgen_ty_3 = 151;
pub const _SC_NETWORKING: _bindgen_ty_3 = 152;
pub const _SC_READER_WRITER_LOCKS: _bindgen_ty_3 = 153;
pub const _SC_SPIN_LOCKS: _bindgen_ty_3 = 154;
pub const _SC_REGEXP: _bindgen_ty_3 = 155;
pub const _SC_REGEX_VERSION: _bindgen_ty_3 = 156;
pub const _SC_SHELL: _bindgen_ty_3 = 157;
pub const _SC_SIGNALS: _bindgen_ty_3 = 158;
pub const _SC_SPAWN: _bindgen_ty_3 = 159;
pub const _SC_SPORADIC_SERVER: _bindgen_ty_3 = 160;
pub const _SC_THREAD_SPORADIC_SERVER: _bindgen_ty_3 = 161;
pub const _SC_SYSTEM_DATABASE: _bindgen_ty_3 = 162;
pub const _SC_SYSTEM_DATABASE_R: _bindgen_ty_3 = 163;
pub const _SC_TIMEOUTS: _bindgen_ty_3 = 164;
pub const _SC_TYPED_MEMORY_OBJECTS: _bindgen_ty_3 = 165;
pub const _SC_USER_GROUPS: _bindgen_ty_3 = 166;
pub const _SC_USER_GROUPS_R: _bindgen_ty_3 = 167;
pub const _SC_2_PBS: _bindgen_ty_3 = 168;
pub const _SC_2_PBS_ACCOUNTING: _bindgen_ty_3 = 169;
pub const _SC_2_PBS_LOCATE: _bindgen_ty_3 = 170;
pub const _SC_2_PBS_MESSAGE: _bindgen_ty_3 = 171;
pub const _SC_2_PBS_TRACK: _bindgen_ty_3 = 172;
pub const _SC_SYMLOOP_MAX: _bindgen_ty_3 = 173;
pub const _SC_STREAMS: _bindgen_ty_3 = 174;
pub const _SC_2_PBS_CHECKPOINT: _bindgen_ty_3 = 175;
pub const _SC_V6_ILP32_OFF32: _bindgen_ty_3 = 176;
pub const _SC_V6_ILP32_OFFBIG: _bindgen_ty_3 = 177;
pub const _SC_V6_LP64_OFF64: _bindgen_ty_3 = 178;
pub const _SC_V6_LPBIG_OFFBIG: _bindgen_ty_3 = 179;
pub const _SC_HOST_NAME_MAX: _bindgen_ty_3 = 180;
pub const _SC_TRACE: _bindgen_ty_3 = 181;
pub const _SC_TRACE_EVENT_FILTER: _bindgen_ty_3 = 182;
pub const _SC_TRACE_INHERIT: _bindgen_ty_3 = 183;
pub const _SC_TRACE_LOG: _bindgen_ty_3 = 184;
pub const _SC_LEVEL1_ICACHE_SIZE: _bindgen_ty_3 = 185;
pub const _SC_LEVEL1_ICACHE_ASSOC: _bindgen_ty_3 = 186;
pub const _SC_LEVEL1_ICACHE_LINESIZE: _bindgen_ty_3 = 187;
pub const _SC_LEVEL1_DCACHE_SIZE: _bindgen_ty_3 = 188;
pub const _SC_LEVEL1_DCACHE_ASSOC: _bindgen_ty_3 = 189;
pub const _SC_LEVEL1_DCACHE_LINESIZE: _bindgen_ty_3 = 190;
pub const _SC_LEVEL2_CACHE_SIZE: _bindgen_ty_3 = 191;
pub const _SC_LEVEL2_CACHE_ASSOC: _bindgen_ty_3 = 192;
pub const _SC_LEVEL2_CACHE_LINESIZE: _bindgen_ty_3 = 193;
pub const _SC_LEVEL3_CACHE_SIZE: _bindgen_ty_3 = 194;
pub const _SC_LEVEL3_CACHE_ASSOC: _bindgen_ty_3 = 195;
pub const _SC_LEVEL3_CACHE_LINESIZE: _bindgen_ty_3 = 196;
pub const _SC_LEVEL4_CACHE_SIZE: _bindgen_ty_3 = 197;
pub const _SC_LEVEL4_CACHE_ASSOC: _bindgen_ty_3 = 198;
pub const _SC_LEVEL4_CACHE_LINESIZE: _bindgen_ty_3 = 199;
pub const _SC_IPV6: _bindgen_ty_3 = 235;
pub const _SC_RAW_SOCKETS: _bindgen_ty_3 = 236;
pub const _SC_V7_ILP32_OFF32: _bindgen_ty_3 = 237;
pub const _SC_V7_ILP32_OFFBIG: _bindgen_ty_3 = 238;
pub const _SC_V7_LP64_OFF64: _bindgen_ty_3 = 239;
pub const _SC_V7_LPBIG_OFFBIG: _bindgen_ty_3 = 240;
pub const _SC_SS_REPL_MAX: _bindgen_ty_3 = 241;
pub const _SC_TRACE_EVENT_NAME_MAX: _bindgen_ty_3 = 242;
pub const _SC_TRACE_NAME_MAX: _bindgen_ty_3 = 243;
pub const _SC_TRACE_SYS_MAX: _bindgen_ty_3 = 244;
pub const _SC_TRACE_USER_EVENT_MAX: _bindgen_ty_3 = 245;
pub const _SC_XOPEN_STREAMS: _bindgen_ty_3 = 246;
pub const _SC_THREAD_ROBUST_PRIO_INHERIT: _bindgen_ty_3 = 247;
pub const _SC_THREAD_ROBUST_PRIO_PROTECT: _bindgen_ty_3 = 248;
pub const _SC_MINSIGSTKSZ: _bindgen_ty_3 = 249;
pub const _SC_SIGSTKSZ: _bindgen_ty_3 = 250;
pub type _bindgen_ty_3 = ::std::os::raw::c_uint;
pub const _CS_PATH: _bindgen_ty_4 = 0;
pub const _CS_V6_WIDTH_RESTRICTED_ENVS: _bindgen_ty_4 = 1;
pub const _CS_GNU_LIBC_VERSION: _bindgen_ty_4 = 2;
pub const _CS_GNU_LIBPTHREAD_VERSION: _bindgen_ty_4 = 3;
pub const _CS_V5_WIDTH_RESTRICTED_ENVS: _bindgen_ty_4 = 4;
pub const _CS_V7_WIDTH_RESTRICTED_ENVS: _bindgen_ty_4 = 5;
pub const _CS_LFS_CFLAGS: _bindgen_ty_4 = 1000;
pub const _CS_LFS_LDFLAGS: _bindgen_ty_4 = 1001;
pub const _CS_LFS_LIBS: _bindgen_ty_4 = 1002;
pub const _CS_LFS_LINTFLAGS: _bindgen_ty_4 = 1003;
pub const _CS_LFS64_CFLAGS: _bindgen_ty_4 = 1004;
pub const _CS_LFS64_LDFLAGS: _bindgen_ty_4 = 1005;
pub const _CS_LFS64_LIBS: _bindgen_ty_4 = 1006;
pub const _CS_LFS64_LINTFLAGS: _bindgen_ty_4 = 1007;
pub const _CS_XBS5_ILP32_OFF32_CFLAGS: _bindgen_ty_4 = 1100;
pub const _CS_XBS5_ILP32_OFF32_LDFLAGS: _bindgen_ty_4 = 1101;
pub const _CS_XBS5_ILP32_OFF32_LIBS: _bindgen_ty_4 = 1102;
pub const _CS_XBS5_ILP32_OFF32_LINTFLAGS: _bindgen_ty_4 = 1103;
pub const _CS_XBS5_ILP32_OFFBIG_CFLAGS: _bindgen_ty_4 = 1104;
pub const _CS_XBS5_ILP32_OFFBIG_LDFLAGS: _bindgen_ty_4 = 1105;
pub const _CS_XBS5_ILP32_OFFBIG_LIBS: _bindgen_ty_4 = 1106;
pub const _CS_XBS5_ILP32_OFFBIG_LINTFLAGS: _bindgen_ty_4 = 1107;
pub const _CS_XBS5_LP64_OFF64_CFLAGS: _bindgen_ty_4 = 1108;
pub const _CS_XBS5_LP64_OFF64_LDFLAGS: _bindgen_ty_4 = 1109;
pub const _CS_XBS5_LP64_OFF64_LIBS: _bindgen_ty_4 = 1110;
pub const _CS_XBS5_LP64_OFF64_LINTFLAGS: _bindgen_ty_4 = 1111;
pub const _CS_XBS5_LPBIG_OFFBIG_CFLAGS: _bindgen_ty_4 = 1112;
pub const _CS_XBS5_LPBIG_OFFBIG_LDFLAGS: _bindgen_ty_4 = 1113;
pub const _CS_XBS5_LPBIG_OFFBIG_LIBS: _bindgen_ty_4 = 1114;
pub const _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS: _bindgen_ty_4 = 1115;
pub const _CS_POSIX_V6_ILP32_OFF32_CFLAGS: _bindgen_ty_4 = 1116;
pub const _CS_POSIX_V6_ILP32_OFF32_LDFLAGS: _bindgen_ty_4 = 1117;
pub const _CS_POSIX_V6_ILP32_OFF32_LIBS: _bindgen_ty_4 = 1118;
pub const _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS: _bindgen_ty_4 = 1119;
pub const _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS: _bindgen_ty_4 = 1120;
pub const _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS: _bindgen_ty_4 = 1121;
pub const _CS_POSIX_V6_ILP32_OFFBIG_LIBS: _bindgen_ty_4 = 1122;
pub const _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS: _bindgen_ty_4 = 1123;
pub const _CS_POSIX_V6_LP64_OFF64_CFLAGS: _bindgen_ty_4 = 1124;
pub const _CS_POSIX_V6_LP64_OFF64_LDFLAGS: _bindgen_ty_4 = 1125;
pub const _CS_POSIX_V6_LP64_OFF64_LIBS: _bindgen_ty_4 = 1126;
pub const _CS_POSIX_V6_LP64_OFF64_LINTFLAGS: _bindgen_ty_4 = 1127;
pub const _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS: _bindgen_ty_4 = 1128;
pub const _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS: _bindgen_ty_4 = 1129;
pub const _CS_POSIX_V6_LPBIG_OFFBIG_LIBS: _bindgen_ty_4 = 1130;
pub const _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS: _bindgen_ty_4 = 1131;
pub const _CS_POSIX_V7_ILP32_OFF32_CFLAGS: _bindgen_ty_4 = 1132;
pub const _CS_POSIX_V7_ILP32_OFF32_LDFLAGS: _bindgen_ty_4 = 1133;
pub const _CS_POSIX_V7_ILP32_OFF32_LIBS: _bindgen_ty_4 = 1134;
pub const _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS: _bindgen_ty_4 = 1135;
pub const _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS: _bindgen_ty_4 = 1136;
pub const _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS: _bindgen_ty_4 = 1137;
pub const _CS_POSIX_V7_ILP32_OFFBIG_LIBS: _bindgen_ty_4 = 1138;
pub const _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS: _bindgen_ty_4 = 1139;
pub const _CS_POSIX_V7_LP64_OFF64_CFLAGS: _bindgen_ty_4 = 1140;
pub const _CS_POSIX_V7_LP64_OFF64_LDFLAGS: _bindgen_ty_4 = 1141;
pub const _CS_POSIX_V7_LP64_OFF64_LIBS: _bindgen_ty_4 = 1142;
pub const _CS_POSIX_V7_LP64_OFF64_LINTFLAGS: _bindgen_ty_4 = 1143;
pub const _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS: _bindgen_ty_4 = 1144;
pub const _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS: _bindgen_ty_4 = 1145;
pub const _CS_POSIX_V7_LPBIG_OFFBIG_LIBS: _bindgen_ty_4 = 1146;
pub const _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS: _bindgen_ty_4 = 1147;
pub const _CS_V6_ENV: _bindgen_ty_4 = 1148;
pub const _CS_V7_ENV: _bindgen_ty_4 = 1149;
pub type _bindgen_ty_4 = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub static mut optarg: *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static mut optind: ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub static mut opterr: ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub static mut optopt: ::std::os::raw::c_int;
}
pub type int32 = ::std::os::raw::c_int;
pub type int64 = ::std::os::raw::c_longlong;
pub type uint32 = ::std::os::raw::c_uint;
pub type int16 = ::std::os::raw::c_short;
pub type REAL8 = f64;
pub type INT4 = ::std::os::raw::c_int;
pub type UINT4 = ::std::os::raw::c_uint;
pub type AS_BOOL = ::std::os::raw::c_int;
pub type UINT2 = ::std::os::raw::c_ushort;
pub type UCHAR = ::std::os::raw::c_uchar;
pub type centisec = int32;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __locale_struct {
    pub __locales: [*mut __locale_data; 13usize],
    pub __ctype_b: *const ::std::os::raw::c_ushort,
    pub __ctype_tolower: *const ::std::os::raw::c_int,
    pub __ctype_toupper: *const ::std::os::raw::c_int,
    pub __names: [*const ::std::os::raw::c_char; 13usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __locale_struct"][::std::mem::size_of::<__locale_struct>() - 232usize];
    ["Alignment of __locale_struct"][::std::mem::align_of::<__locale_struct>() - 8usize];
    ["Offset of field: __locale_struct::__locales"]
        [::std::mem::offset_of!(__locale_struct, __locales) - 0usize];
    ["Offset of field: __locale_struct::__ctype_b"]
        [::std::mem::offset_of!(__locale_struct, __ctype_b) - 104usize];
    ["Offset of field: __locale_struct::__ctype_tolower"]
        [::std::mem::offset_of!(__locale_struct, __ctype_tolower) - 112usize];
    ["Offset of field: __locale_struct::__ctype_toupper"]
        [::std::mem::offset_of!(__locale_struct, __ctype_toupper) - 120usize];
    ["Offset of field: __locale_struct::__names"]
        [::std::mem::offset_of!(__locale_struct, __names) - 128usize];
};
pub type __locale_t = *mut __locale_struct;
pub type locale_t = __locale_t;
pub const _ISupper: _bindgen_ty_5 = 256;
pub const _ISlower: _bindgen_ty_5 = 512;
pub const _ISalpha: _bindgen_ty_5 = 1024;
pub const _ISdigit: _bindgen_ty_5 = 2048;
pub const _ISxdigit: _bindgen_ty_5 = 4096;
pub const _ISspace: _bindgen_ty_5 = 8192;
pub const _ISprint: _bindgen_ty_5 = 16384;
pub const _ISgraph: _bindgen_ty_5 = 32768;
pub const _ISblank: _bindgen_ty_5 = 1;
pub const _IScntrl: _bindgen_ty_5 = 2;
pub const _ISpunct: _bindgen_ty_5 = 4;
pub const _ISalnum: _bindgen_ty_5 = 8;
pub type _bindgen_ty_5 = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn swe_heliacal_ut(
        tjdstart_ut: f64,
        geopos: *mut f64,
        datm: *mut f64,
        dobs: *mut f64,
        ObjectName: *mut ::std::os::raw::c_char,
        TypeEvent: int32,
        iflag: int32,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_heliacal_pheno_ut(
        tjd_ut: f64,
        geopos: *mut f64,
        datm: *mut f64,
        dobs: *mut f64,
        ObjectName: *mut ::std::os::raw::c_char,
        TypeEvent: int32,
        helflag: int32,
        darr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_vis_limit_mag(
        tjdut: f64,
        geopos: *mut f64,
        datm: *mut f64,
        dobs: *mut f64,
        ObjectName: *mut ::std::os::raw::c_char,
        helflag: int32,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_heliacal_angle(
        tjdut: f64,
        dgeo: *mut f64,
        datm: *mut f64,
        dobs: *mut f64,
        helflag: int32,
        mag: f64,
        azi_obj: f64,
        azi_sun: f64,
        azi_moon: f64,
        alt_moon: f64,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_topo_arcus_visionis(
        tjdut: f64,
        dgeo: *mut f64,
        datm: *mut f64,
        dobs: *mut f64,
        helflag: int32,
        mag: f64,
        azi_obj: f64,
        alt_obj: f64,
        azi_sun: f64,
        azi_moon: f64,
        alt_moon: f64,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_set_astro_models(samod: *mut ::std::os::raw::c_char, iflag: int32);
}
unsafe extern "C" {
    pub fn swe_get_astro_models(
        samod: *mut ::std::os::raw::c_char,
        sdet: *mut ::std::os::raw::c_char,
        iflag: int32,
    );
}
unsafe extern "C" {
    #[doc = " exports from sweph.c"]
    pub fn swe_version(arg1: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn swe_get_library_path(arg1: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn swe_calc(
        tjd: f64,
        ipl: ::std::os::raw::c_int,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_calc_ut(
        tjd_ut: f64,
        ipl: int32,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_calc_pctr(
        tjd: f64,
        ipl: int32,
        iplctr: int32,
        iflag: int32,
        xxret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_solcross(
        x2cross: f64,
        jd_et: f64,
        flag: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
unsafe extern "C" {
    pub fn swe_solcross_ut(
        x2cross: f64,
        jd_ut: f64,
        flag: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
unsafe extern "C" {
    pub fn swe_mooncross(
        x2cross: f64,
        jd_et: f64,
        flag: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
unsafe extern "C" {
    pub fn swe_mooncross_ut(
        x2cross: f64,
        jd_ut: f64,
        flag: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
unsafe extern "C" {
    pub fn swe_mooncross_node(
        jd_et: f64,
        flag: int32,
        xlon: *mut f64,
        xlat: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
unsafe extern "C" {
    pub fn swe_mooncross_node_ut(
        jd_ut: f64,
        flag: int32,
        xlon: *mut f64,
        xlat: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
unsafe extern "C" {
    pub fn swe_helio_cross(
        ipl: int32,
        x2cross: f64,
        jd_et: f64,
        iflag: int32,
        dir: int32,
        jd_cross: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_helio_cross_ut(
        ipl: int32,
        x2cross: f64,
        jd_ut: f64,
        iflag: int32,
        dir: int32,
        jd_cross: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_fixstar(
        star: *mut ::std::os::raw::c_char,
        tjd: f64,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_fixstar_ut(
        star: *mut ::std::os::raw::c_char,
        tjd_ut: f64,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_fixstar_mag(
        star: *mut ::std::os::raw::c_char,
        mag: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_fixstar2(
        star: *mut ::std::os::raw::c_char,
        tjd: f64,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_fixstar2_ut(
        star: *mut ::std::os::raw::c_char,
        tjd_ut: f64,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_fixstar2_mag(
        star: *mut ::std::os::raw::c_char,
        mag: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_close();
}
unsafe extern "C" {
    pub fn swe_set_ephe_path(path: *const ::std::os::raw::c_char);
}
unsafe extern "C" {
    pub fn swe_set_jpl_file(fname: *const ::std::os::raw::c_char);
}
unsafe extern "C" {
    pub fn swe_get_planet_name(
        ipl: ::std::os::raw::c_int,
        spname: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn swe_set_topo(geolon: f64, geolat: f64, geoalt: f64);
}
unsafe extern "C" {
    pub fn swe_set_sid_mode(sid_mode: int32, t0: f64, ayan_t0: f64);
}
unsafe extern "C" {
    pub fn swe_get_ayanamsa_ex(
        tjd_et: f64,
        iflag: int32,
        daya: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_get_ayanamsa_ex_ut(
        tjd_ut: f64,
        iflag: int32,
        daya: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_get_ayanamsa(tjd_et: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_get_ayanamsa_ut(tjd_ut: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_get_ayanamsa_name(isidmode: int32) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn swe_get_current_file_data(
        ifno: ::std::os::raw::c_int,
        tfstart: *mut f64,
        tfend: *mut f64,
        denum: *mut ::std::os::raw::c_int,
    ) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    #[doc = " exports from swedate.c"]
    pub fn swe_date_conversion(
        y: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        d: ::std::os::raw::c_int,
        utime: f64,
        c: ::std::os::raw::c_char,
        tjd: *mut f64,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn swe_julday(
        year: ::std::os::raw::c_int,
        month: ::std::os::raw::c_int,
        day: ::std::os::raw::c_int,
        hour: f64,
        gregflag: ::std::os::raw::c_int,
    ) -> f64;
}
unsafe extern "C" {
    pub fn swe_revjul(
        jd: f64,
        gregflag: ::std::os::raw::c_int,
        jyear: *mut ::std::os::raw::c_int,
        jmon: *mut ::std::os::raw::c_int,
        jday: *mut ::std::os::raw::c_int,
        jut: *mut f64,
    );
}
unsafe extern "C" {
    pub fn swe_utc_to_jd(
        iyear: int32,
        imonth: int32,
        iday: int32,
        ihour: int32,
        imin: int32,
        dsec: f64,
        gregflag: int32,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_jdet_to_utc(
        tjd_et: f64,
        gregflag: int32,
        iyear: *mut int32,
        imonth: *mut int32,
        iday: *mut int32,
        ihour: *mut int32,
        imin: *mut int32,
        dsec: *mut f64,
    );
}
unsafe extern "C" {
    pub fn swe_jdut1_to_utc(
        tjd_ut: f64,
        gregflag: int32,
        iyear: *mut int32,
        imonth: *mut int32,
        iday: *mut int32,
        ihour: *mut int32,
        imin: *mut int32,
        dsec: *mut f64,
    );
}
unsafe extern "C" {
    pub fn swe_utc_time_zone(
        iyear: int32,
        imonth: int32,
        iday: int32,
        ihour: int32,
        imin: int32,
        dsec: f64,
        d_timezone: f64,
        iyear_out: *mut int32,
        imonth_out: *mut int32,
        iday_out: *mut int32,
        ihour_out: *mut int32,
        imin_out: *mut int32,
        dsec_out: *mut f64,
    );
}
unsafe extern "C" {
    #[doc = " exports from swehouse.c"]
    pub fn swe_houses(
        tjd_ut: f64,
        geolat: f64,
        geolon: f64,
        hsys: ::std::os::raw::c_int,
        cusps: *mut f64,
        ascmc: *mut f64,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn swe_houses_ex(
        tjd_ut: f64,
        iflag: int32,
        geolat: f64,
        geolon: f64,
        hsys: ::std::os::raw::c_int,
        cusps: *mut f64,
        ascmc: *mut f64,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn swe_houses_ex2(
        tjd_ut: f64,
        iflag: int32,
        geolat: f64,
        geolon: f64,
        hsys: ::std::os::raw::c_int,
        cusps: *mut f64,
        ascmc: *mut f64,
        cusp_speed: *mut f64,
        ascmc_speed: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn swe_houses_armc(
        armc: f64,
        geolat: f64,
        eps: f64,
        hsys: ::std::os::raw::c_int,
        cusps: *mut f64,
        ascmc: *mut f64,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn swe_houses_armc_ex2(
        armc: f64,
        geolat: f64,
        eps: f64,
        hsys: ::std::os::raw::c_int,
        cusps: *mut f64,
        ascmc: *mut f64,
        cusp_speed: *mut f64,
        ascmc_speed: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn swe_house_pos(
        armc: f64,
        geolat: f64,
        eps: f64,
        hsys: ::std::os::raw::c_int,
        xpin: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
unsafe extern "C" {
    pub fn swe_house_name(hsys: ::std::os::raw::c_int) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    #[doc = " exports from swecl.c"]
    pub fn swe_gauquelin_sector(
        t_ut: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        iflag: int32,
        imeth: int32,
        geopos: *mut f64,
        atpress: f64,
        attemp: f64,
        dgsect: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_sol_eclipse_where(
        tjd: f64,
        ifl: int32,
        geopos: *mut f64,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_lun_occult_where(
        tjd: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        ifl: int32,
        geopos: *mut f64,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_sol_eclipse_how(
        tjd: f64,
        ifl: int32,
        geopos: *mut f64,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_sol_eclipse_when_loc(
        tjd_start: f64,
        ifl: int32,
        geopos: *mut f64,
        tret: *mut f64,
        attr: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_lun_occult_when_loc(
        tjd_start: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        ifl: int32,
        geopos: *mut f64,
        tret: *mut f64,
        attr: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_sol_eclipse_when_glob(
        tjd_start: f64,
        ifl: int32,
        ifltype: int32,
        tret: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_lun_occult_when_glob(
        tjd_start: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        ifl: int32,
        ifltype: int32,
        tret: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_lun_eclipse_how(
        tjd_ut: f64,
        ifl: int32,
        geopos: *mut f64,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_lun_eclipse_when(
        tjd_start: f64,
        ifl: int32,
        ifltype: int32,
        tret: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_lun_eclipse_when_loc(
        tjd_start: f64,
        ifl: int32,
        geopos: *mut f64,
        tret: *mut f64,
        attr: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_pheno(
        tjd: f64,
        ipl: int32,
        iflag: int32,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_pheno_ut(
        tjd_ut: f64,
        ipl: int32,
        iflag: int32,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_refrac(inalt: f64, atpress: f64, attemp: f64, calc_flag: int32) -> f64;
}
unsafe extern "C" {
    pub fn swe_refrac_extended(
        inalt: f64,
        geoalt: f64,
        atpress: f64,
        attemp: f64,
        lapse_rate: f64,
        calc_flag: int32,
        dret: *mut f64,
    ) -> f64;
}
unsafe extern "C" {
    pub fn swe_set_lapse_rate(lapse_rate: f64);
}
unsafe extern "C" {
    pub fn swe_azalt(
        tjd_ut: f64,
        calc_flag: int32,
        geopos: *mut f64,
        atpress: f64,
        attemp: f64,
        xin: *mut f64,
        xaz: *mut f64,
    );
}
unsafe extern "C" {
    pub fn swe_azalt_rev(
        tjd_ut: f64,
        calc_flag: int32,
        geopos: *mut f64,
        xin: *mut f64,
        xout: *mut f64,
    );
}
unsafe extern "C" {
    pub fn swe_rise_trans_true_hor(
        tjd_ut: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        epheflag: int32,
        rsmi: int32,
        geopos: *mut f64,
        atpress: f64,
        attemp: f64,
        horhgt: f64,
        tret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_rise_trans(
        tjd_ut: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        epheflag: int32,
        rsmi: int32,
        geopos: *mut f64,
        atpress: f64,
        attemp: f64,
        tret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_nod_aps(
        tjd_et: f64,
        ipl: int32,
        iflag: int32,
        method: int32,
        xnasc: *mut f64,
        xndsc: *mut f64,
        xperi: *mut f64,
        xaphe: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_nod_aps_ut(
        tjd_ut: f64,
        ipl: int32,
        iflag: int32,
        method: int32,
        xnasc: *mut f64,
        xndsc: *mut f64,
        xperi: *mut f64,
        xaphe: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_get_orbital_elements(
        tjd_et: f64,
        ipl: int32,
        iflag: int32,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_orbit_max_min_true_distance(
        tjd_et: f64,
        ipl: int32,
        iflag: int32,
        dmax: *mut f64,
        dmin: *mut f64,
        dtrue: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    #[doc = " exports from swephlib.c"]
    pub fn swe_deltat(tjd: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_deltat_ex(tjd: f64, iflag: int32, serr: *mut ::std::os::raw::c_char) -> f64;
}
unsafe extern "C" {
    pub fn swe_time_equ(tjd: f64, te: *mut f64, serr: *mut ::std::os::raw::c_char) -> int32;
}
unsafe extern "C" {
    pub fn swe_lmt_to_lat(
        tjd_lmt: f64,
        geolon: f64,
        tjd_lat: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_lat_to_lmt(
        tjd_lat: f64,
        geolon: f64,
        tjd_lmt: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
unsafe extern "C" {
    pub fn swe_sidtime0(tjd_ut: f64, eps: f64, nut: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_sidtime(tjd_ut: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_set_interpolate_nut(do_interpolate: AS_BOOL);
}
unsafe extern "C" {
    pub fn swe_cotrans(xpo: *mut f64, xpn: *mut f64, eps: f64);
}
unsafe extern "C" {
    pub fn swe_cotrans_sp(xpo: *mut f64, xpn: *mut f64, eps: f64);
}
unsafe extern "C" {
    pub fn swe_get_tid_acc() -> f64;
}
unsafe extern "C" {
    pub fn swe_set_tid_acc(t_acc: f64);
}
unsafe extern "C" {
    pub fn swe_set_delta_t_userdef(dt: f64);
}
unsafe extern "C" {
    pub fn swe_degnorm(x: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_radnorm(x: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_rad_midp(x1: f64, x0: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_deg_midp(x1: f64, x0: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_split_deg(
        ddeg: f64,
        roundflag: int32,
        ideg: *mut int32,
        imin: *mut int32,
        isec: *mut int32,
        dsecfr: *mut f64,
        isgn: *mut int32,
    );
}
unsafe extern "C" {
    #[doc = " other functions from swephlib.c;\n they are not needed for Swiss Ephemeris,\n but may be useful to former Placalc users."]
    pub fn swe_csnorm(p: centisec) -> centisec;
}
unsafe extern "C" {
    pub fn swe_difcsn(p1: centisec, p2: centisec) -> centisec;
}
unsafe extern "C" {
    pub fn swe_difdegn(p1: f64, p2: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_difcs2n(p1: centisec, p2: centisec) -> centisec;
}
unsafe extern "C" {
    pub fn swe_difdeg2n(p1: f64, p2: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_difrad2n(p1: f64, p2: f64) -> f64;
}
unsafe extern "C" {
    pub fn swe_csroundsec(x: centisec) -> centisec;
}
unsafe extern "C" {
    pub fn swe_d2l(x: f64) -> int32;
}
unsafe extern "C" {
    pub fn swe_day_of_week(jd: f64) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn swe_cs2timestr(
        t: centisec,
        sep: ::std::os::raw::c_int,
        suppressZero: AS_BOOL,
        a: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn swe_cs2lonlatstr(
        t: centisec,
        pchar: ::std::os::raw::c_char,
        mchar: ::std::os::raw::c_char,
        s: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn swe_cs2degstr(
        t: centisec,
        a: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
pub type __builtin_va_list = [__va_list_tag; 1usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __va_list_tag {
    pub gp_offset: ::std::os::raw::c_uint,
    pub fp_offset: ::std::os::raw::c_uint,
    pub overflow_arg_area: *mut ::std::os::raw::c_void,
    pub reg_save_area: *mut ::std::os::raw::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __va_list_tag"][::std::mem::size_of::<__va_list_tag>() - 24usize];
    ["Alignment of __va_list_tag"][::std::mem::align_of::<__va_list_tag>() - 8usize];
    ["Offset of field: __va_list_tag::gp_offset"]
        [::std::mem::offset_of!(__va_list_tag, gp_offset) - 0usize];
    ["Offset of field: __va_list_tag::fp_offset"]
        [::std::mem::offset_of!(__va_list_tag, fp_offset) - 4usize];
    ["Offset of field: __va_list_tag::overflow_arg_area"]
        [::std::mem::offset_of!(__va_list_tag, overflow_arg_area) - 8usize];
    ["Offset of field: __va_list_tag::reg_save_area"]
        [::std::mem::offset_of!(__va_list_tag, reg_save_area) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __locale_data {
    pub _address: u8,
}
